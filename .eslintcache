[{"/Users/zulie/Desktop/modal/Practice/src/index.js":"1","/Users/zulie/Desktop/modal/Practice/src/Routes.js":"2","/Users/zulie/Desktop/modal/Practice/src/pages/props/Parent.js":"3","/Users/zulie/Desktop/modal/Practice/src/pages/props/Mother.js":"4","/Users/zulie/Desktop/modal/Practice/src/pages/compare/CompareButton.js":"5","/Users/zulie/Desktop/modal/Practice/src/pages/props/Baby.js":"6","/Users/zulie/Desktop/modal/Practice/src/pages/config.js":"7","/Users/zulie/Desktop/modal/Practice/src/pages/props/Children.js":"8","/Users/zulie/Desktop/modal/Practice/src/pages/compare/ModalButton.js":"9","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/Building.js":"10","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/NothingPage.js":"11","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/BrandBuilding.js":"12"},{"size":300,"mtime":1612775600082,"results":"13","hashOfConfig":"14"},{"size":613,"mtime":1612937171122,"results":"15","hashOfConfig":"14"},{"size":1412,"mtime":1612775600084,"results":"16","hashOfConfig":"14"},{"size":2005,"mtime":1612775600084,"results":"17","hashOfConfig":"14"},{"size":2347,"mtime":1612937286282,"results":"18","hashOfConfig":"14"},{"size":557,"mtime":1612745780718,"results":"19","hashOfConfig":"14"},{"size":38,"mtime":1612745780718,"results":"20","hashOfConfig":"14"},{"size":530,"mtime":1612745780718,"results":"21","hashOfConfig":"14"},{"size":2899,"mtime":1612939025150,"results":"22","hashOfConfig":"14"},{"size":6171,"mtime":1612925763177,"results":"23","hashOfConfig":"14"},{"size":1083,"mtime":1612922851972,"results":"24","hashOfConfig":"14"},{"size":7130,"mtime":1612939133197,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1id7cic",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zulie/Desktop/modal/Practice/src/index.js",[],["54","55"],"/Users/zulie/Desktop/modal/Practice/src/Routes.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/props/Parent.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/props/Mother.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/compare/CompareButton.js",["56"],"import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ModalButton from './ModalButton';\nimport { API } from '../config';\nimport { atom, useRecoilState } from 'recoil';\n\nconst Wrapper = styled.div`\n    margin: 10px;\n    font-size: 15px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n\n    input {\n        width: 15px;\n        height: 15px;\n        margin-top: 10px;\n    }\n`;\n\nexport const compareState = atom({\n    key: 'CompareButton',\n    default: [],\n});\n\nconst CompareButton = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isModalProduct, setIsModalProduct] = useState(false);\n    const [data, setData] = useRecoilState(compareState);\n\n    useEffect(() => {\n        fetch(API)\n            .then((res) => res.json())\n            .then((res) => setData(res.data.content));\n    }, []);\n\n    const handleShowModal = () => {\n        setIsModalOpen(!isModalOpen);\n    };\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    const handleCheck = (e) => {\n        const item = data[2];\n        const { checked } = e.target;\n        if (checked) {\n            addItem(new Date().getMilliseconds(), item);\n        } else {\n            removeItem(item.id);\n        }\n    };\n\n    const addItem = (id, item) => {\n        setData((data) => [...data, { ...item, id }]);\n    };\n\n    const removeItem = (id) => {\n        setData(data.filter((data) => data.id !== id));\n    };\n\n    return (\n        <Fragment>\n            <Container>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n            </Container>\n            <ModalButton\n                handleCheck={handleCheck}\n                handleAddItem={addItem}\n                isModalProduct={isModalProduct}\n                removeItem={removeItem}\n                data={data}\n                isModalOpen={isModalOpen}\n                handleshowModal={handleShowModal}\n                handleModalProduct={handleModalProduct}\n            />\n        </Fragment>\n    );\n};\n\nexport default CompareButton;\n","/Users/zulie/Desktop/modal/Practice/src/pages/props/Baby.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/config.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/props/Children.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/compare/ModalButton.js",["57"],"import React, { Fragment, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport BrandBuilding from './components/BrandBuilding';\nimport NothingPage from './components/NothingPage';\nimport { compareState } from '../compare/CompareButton';\nimport { useRecoilState } from 'recoil';\n\nconst Toggle = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    bottom: 0;\n`;\n\nconst Compare = styled.button`\n    position: relative;\n    justify-content: center;\n    box-sizing: border-box;\n    width: 200px;\n    height: 44px;\n    outline-style: none;\n    margin: 0 0 -1px 208px;\n    border-radius: 8px;\n    background-color: #212121;\n    color: #ffffff;\n    font-weight: 500;\n    padding: 10px 48px 10px 24px;\n\n    span {\n        color: ${(props) => (props.isModalProduct ? '#ffffff' : 'ff5b29')};\n        font-size: 14px;\n        text-align: center;\n        font-family: NotoSansKR;\n        margin: 0 0 7px;\n        width: 128px;\n        height: 24px;\n        line-height: normal;\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst PlaceNumber = styled.span`\n    color: ${(props) => (!props.data ? 'white' : '#ff5b29')};\n`;\n\nconst Line = styled.div`\n    width: 100%;\n    height: 2px;\n    background-color: #212121;\n`;\n\nconst Up = css`\n    content: '';\n    width: 7px;\n    height: 7px;\n    border-top: 3px solid #fff;\n    border-right: 3px solid #fff;\n    display: inline-block;\n    transform: rotate(315deg);\n    position: absolute;\n    top: 17px;\n    right: 35px;\n`;\n\nconst Down = css`\n    content: '';\n    width: 7px;\n    height: 7px;\n    border-top: 3px solid #fff;\n    border-right: 3px solid #fff;\n    display: inline-block;\n    transform: rotate(135deg);\n    position: absolute;\n    top: 12px;\n    right: 35px;\n`;\n\nconst Arrow = styled.div`\n    display: ${(props) => (props.isModalOpen ? `${Down}` : `${Up}`)};\n`;\n\nconst ModalButton = ({ id, removeItem, isModalOpen }) => {\n    const [isModalProduct, setIsModalProduct] = useState(false);\n    const [data, setData] = useRecoilState(compareState);\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    return (\n        <Fragment>\n            <Toggle isModalOpen={isModalOpen}>\n                <Compare onClick={() => handleModalProduct()}>\n                    <span>견적 비교하기</span>\n                    <PlaceNumber data={data}>({!data ? 0 : data?.length}/5)</PlaceNumber>\n                    <Arrow />\n                </Compare>\n                <Line />\n                {console.log(data)}\n                {data ? (\n                    <BrandBuilding isModalProduct={isModalProduct} id={id} removeItem={removeItem} />\n                ) : (\n                    <NothingPage isModalProduct={isModalProduct} id={id} />\n                )}\n            </Toggle>\n        </Fragment>\n    );\n};\n\nexport default ModalButton;\n","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/Building.js",["58","59"],"import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../CompareButton';\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 457px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 127px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    font-weight: 700;\n\n    .placeimage {\n        position: relative;\n        margin: 2px 2px 0;\n        margin-bottom: 14px;\n\n        img {\n            width: 188px;\n            height: 76px;\n            border-radius: 8px;\n        }\n\n        .placeLogo {\n            border-radius: 14px;\n            position: absolute;\n            top: 55px;\n            left: 75px;\n            width: 40px;\n            height: 40px;\n        }\n    }\n\n    .delete {\n        position: absolute;\n        top: 8px;\n        right: 5px;\n        background: rgba(0, 0, 0, 0.6);\n        color: #fff;\n        font-size: 1em;\n        font-weight: bold;\n        text-align: center;\n        width: 22px;\n        height: 20px;\n        border-radius: 100%;\n        padding-top: 3px;\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n    }\n\n    .container {\n        text-align: right;\n        margin-top: 13.5px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: ${(props) => (props.minNumber ? 'blue' : 'black')};\n        }\n    }\n`;\n\nconst Building = ({ id, isModalProduct, removeItem }) => {\n    const [data, setData] = useRecoilState(compareState);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', ' 만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n    // const minNumber = () => {\n    const cost = data.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n    console.log(min);\n\n    // };\n\n    // const deposit = data.map((x) => x.deposit);\n    // const max = Math.max.apply(null, deposit);\n    // console.log(max);\n\n    return (\n        <Fragment>\n            <WrapModal isModalProduct={isModalProduct}>\n                <Categories>\n                    <div className='category'>예상 창업비용</div>\n                    <div className='category'>보증금</div>\n                    <div className='category'>권리금</div>\n                    <div className='category'>면적</div>\n                    <div className='category' id='last'>\n                        층\n                    </div>\n                </Categories>\n                <PlaceData>\n                    {data?.map((data, idx) => {\n                        return (\n                            <Place key={idx} onClick={() => removeItem(id)}>\n                                <div className='placeimage'>\n                                    <img src={data.src} alt='store'></img>\n                                    <div className='delete'>X</div>\n                                </div>\n                                <div className='address'>\n                                    {data.brokerageStoreAddress}\n                                    {/* <Minimum /> */}\n                                </div>\n                                <div className='container'>\n                                    <div className='info'>\n                                        {countNumber(data.estimatedInitialInvestmentCost)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info' id='max'>\n                                        {countNumber(data.deposit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(data.premium)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {Math.floor(data.exclusiveAreaPy * 0.3025)}평 ({data.exclusiveAreaPy}㎡)\n                                    </div>\n                                    <div className='info'>\n                                        {data.floor}/{data.wholeOfFloor}층\n                                    </div>\n                                </div>\n                            </Place>\n                        );\n                    })}\n                </PlaceData>\n            </WrapModal>\n        </Fragment>\n    );\n};\n\nexport default Building;\n","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/NothingPage.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/BrandBuilding.js",["60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":36,"column":8,"nodeType":"68","endLine":36,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":88,"column":18,"nodeType":"72","messageId":"73","endLine":88,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":106,"column":18,"nodeType":"72","messageId":"73","endLine":106,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":124,"column":18,"nodeType":"72","messageId":"76","endLine":124,"endColumn":19},{"ruleId":"70","severity":1,"message":"77","line":117,"column":21,"nodeType":"72","messageId":"73","endLine":117,"endColumn":31},{"ruleId":"74","severity":1,"message":"75","line":141,"column":18,"nodeType":"72","messageId":"76","endLine":141,"endColumn":19},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array.","ArrayExpression",["80"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'i' is already defined.","redeclared","'setContent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [setData]",{"range":"83","text":"84"},[874,876],"[setData]"]