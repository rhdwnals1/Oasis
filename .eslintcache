[{"/Users/julie/Desktop/oasis/Practice/src/index.js":"1","/Users/julie/Desktop/oasis/Practice/src/Routes.js":"2","/Users/julie/Desktop/oasis/Practice/src/pages/props/Parent.js":"3","/Users/julie/Desktop/oasis/Practice/src/pages/props/Mother.js":"4","/Users/julie/Desktop/oasis/Practice/src/pages/compare/CompareButton.js":"5","/Users/julie/Desktop/oasis/Practice/src/pages/props/Baby.js":"6","/Users/julie/Desktop/oasis/Practice/src/pages/props/Children.js":"7","/Users/julie/Desktop/oasis/Practice/src/pages/config.js":"8","/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalButton.js":"9","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/BrandBuilding.js":"10","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/NothingPage.js":"11"},{"size":300,"mtime":1613039376641,"results":"12","hashOfConfig":"13"},{"size":613,"mtime":1613039376639,"results":"14","hashOfConfig":"13"},{"size":1412,"mtime":1613039376650,"results":"15","hashOfConfig":"13"},{"size":2005,"mtime":1613039376649,"results":"16","hashOfConfig":"13"},{"size":2346,"mtime":1613040071312,"results":"17","hashOfConfig":"13"},{"size":557,"mtime":1612683922266,"results":"18","hashOfConfig":"13"},{"size":530,"mtime":1612683922266,"results":"19","hashOfConfig":"13"},{"size":38,"mtime":1612683922266,"results":"20","hashOfConfig":"13"},{"size":2861,"mtime":1613040067308,"results":"21","hashOfConfig":"13"},{"size":7130,"mtime":1613039376644,"results":"22","hashOfConfig":"13"},{"size":1083,"mtime":1613039376645,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jud00b",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/julie/Desktop/oasis/Practice/src/index.js",[],["49","50"],"/Users/julie/Desktop/oasis/Practice/src/Routes.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Parent.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Mother.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/CompareButton.js",["51"],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Baby.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Children.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/config.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalButton.js",["52"],"import React, { Fragment, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport BrandBuilding from './components/BrandBuilding';\nimport NothingPage from './components/NothingPage';\nimport { compareState } from '../compare/CompareButton';\nimport { useRecoilState } from 'recoil';\n\nconst Toggle = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    bottom: 0;\n`;\n\nconst Compare = styled.button`\n    position: relative;\n    justify-content: center;\n    box-sizing: border-box;\n    width: 200px;\n    height: 44px;\n    outline-style: none;\n    margin: 0 0 -1px 208px;\n    border-radius: 8px;\n    background-color: #212121;\n    color: #ffffff;\n    font-weight: 500;\n    padding: 10px 48px 10px 24px;\n    span {\n        color: ${(props) => (props.isModalProduct ? '#ffffff' : 'ff5b29')};\n        font-size: 14px;\n        text-align: center;\n        font-family: NotoSansKR;\n        margin: 0 0 7px;\n        width: 128px;\n        height: 24px;\n        line-height: normal;\n    }\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst PlaceNumber = styled.span`\n    color: ${(props) => (!props.data ? 'white' : '#ff5b29')};\n`;\n\nconst Line = styled.div`\n    width: 100%;\n    height: 2px;\n    background-color: #212121;\n`;\n\nconst Up = css`\n    content: '';\n    width: 7px;\n    height: 7px;\n    border-top: 3px solid #fff;\n    border-right: 3px solid #fff;\n    display: inline-block;\n    transform: rotate(315deg);\n    position: absolute;\n    top: 17px;\n    right: 35px;\n`;\n\nconst Down = css`\n    content: '';\n    width: 7px;\n    height: 7px;\n    border-top: 3px solid #fff;\n    border-right: 3px solid #fff;\n    display: inline-block;\n    transform: rotate(135deg);\n    position: absolute;\n    top: 12px;\n    right: 35px;\n`;\n\nconst Arrow = styled.div`\n    display: ${(props) => (props.isModalOpen ? `${Down}` : `${Up}`)};\n`;\n\nconst ModalButton = ({ id, removeItem, isModalOpen }) => {\n    const [isModalProduct, setIsModalProduct] = useState(false);\n    const [data, setData] = useRecoilState(compareState);\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    return (\n        <Fragment>\n            <Toggle isModalOpen={isModalOpen}>\n                <Compare onClick={() => handleModalProduct()}>\n                    <span>견적 비교하기</span>\n                    <PlaceNumber data={data}>({!data ? 0 : data?.length}/5)</PlaceNumber>\n                    <Arrow />\n                </Compare>\n                <Line />\n                {data ? (\n                    <BrandBuilding isModalProduct={isModalProduct} id={id} removeItem={removeItem} />\n                ) : (\n                    <NothingPage isModalProduct={isModalProduct} id={id} />\n                )}\n            </Toggle>\n        </Fragment>\n    );\n};\n\nexport default ModalButton;\n","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/BrandBuilding.js",["53","54"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../CompareButton';\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 457px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 186px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    font-weight: 700;\n\n    .placeimage {\n        position: relative;\n        margin: 2px 2px 0;\n        margin-bottom: 30px;\n\n        img {\n            width: 188px;\n            height: 76px;\n            border-radius: 8px;\n        }\n\n        .placeLogo {\n            border-radius: 14px;\n            position: absolute;\n            top: 55px;\n            left: 75px;\n            width: 40px;\n            height: 40px;\n        }\n    }\n\n    .delete {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: rgba(0, 0, 0, 0.6);\n        color: #fff;\n        font-size: 1em;\n        font-weight: bold;\n        text-align: center;\n        width: 22px;\n        height: 20px;\n        border-radius: 100%;\n        padding-top: 3px;\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n    }\n\n    .address {\n        margin-top: 2px;\n    }\n\n    .container {\n        text-align: right;\n        margin-top: 20px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n        }\n\n        #cost {\n            color: ${(props) => (props.min ? '#005cff' : '#212121')};\n        }\n\n        #profit {\n            color: ${(props) => (props.max ? '#005cff' : '#212121')};\n        }\n    }\n`;\n\nconst BrandBuilding = ({ id, isModalProduct, removeItem }) => {\n    const [content, setContent] = useRecoilState(compareState);\n\n    const cost = content?.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n\n    const profit = content?.map((x) => x.expectationProfit);\n    const max = Math.max.apply(null, profit);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', ' 만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <>\n            <WrapModal isModalProduct={isModalProduct}>\n                <Categories>\n                    <div className='category'>예상 창업비용</div>\n                    <div className='category'>예상 월 수익</div>\n                    <div className='category'>보증금</div>\n                    <div className='category'>권리금</div>\n                    <div className='category'>면적</div>\n                    <div className='category' id='last'>\n                        층\n                    </div>\n                </Categories>\n                <PlaceData>\n                    {content?.map((content, idx) => {\n                        return (\n                            <Place\n                                key={idx}\n                                onClick={() => removeItem(id)}\n                                max={max === content.expectationProfit}\n                                min={min === content.estimatedInitialInvestmentCost}\n                            >\n                                <div className='placeimage'>\n                                    <img src={content.src} alt='store'></img>\n                                    <img className='placeLogo' src={content.logo} alt='logo'></img>\n                                    <div className='delete'>X</div>\n                                </div>\n                                <div className='placetype'>{content.typeBusiness}</div>\n                                <div className='brand'>{content.franchiseBrandName}</div>\n                                <div className='address'>{content.brokerageStoreAddress}</div>\n                                <div className='container'>\n                                    <div className='info' id='cost'>\n                                        {countNumber(content.estimatedInitialInvestmentCost)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info' id='profit'>\n                                        {countNumber(content.expectationProfit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(content.deposit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(content.premium)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {Math.floor(content.exclusiveAreaPy * 0.3025)}평 ({content.exclusiveAreaPy}\n                                        ㎡)\n                                    </div>\n                                    <div className='info'>\n                                        {content.floor}/{content.wholeOfFloor}층\n                                    </div>\n                                </div>\n                            </Place>\n                        );\n                    })}\n                </PlaceData>\n            </WrapModal>\n        </>\n    );\n};\n\nexport default BrandBuilding;\n","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/NothingPage.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":35,"column":8,"nodeType":"61","endLine":35,"endColumn":10,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":86,"column":18,"nodeType":"65","messageId":"66","endLine":86,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":117,"column":21,"nodeType":"65","messageId":"66","endLine":117,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":141,"column":18,"nodeType":"65","messageId":"70","endLine":141,"endColumn":19},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array.","ArrayExpression",["73"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'setContent' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [setData]",{"range":"76","text":"77"},[873,875],"[setData]"]