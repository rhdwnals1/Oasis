[{"/Users/zulie/Desktop/modal/Practice/src/index.js":"1","/Users/zulie/Desktop/modal/Practice/src/Routes.js":"2","/Users/zulie/Desktop/modal/Practice/src/pages/props/Parent.js":"3","/Users/zulie/Desktop/modal/Practice/src/pages/props/Mother.js":"4","/Users/zulie/Desktop/modal/Practice/src/pages/compare/CompareButton.js":"5","/Users/zulie/Desktop/modal/Practice/src/pages/props/Baby.js":"6","/Users/zulie/Desktop/modal/Practice/src/pages/config.js":"7","/Users/zulie/Desktop/modal/Practice/src/pages/props/Children.js":"8","/Users/zulie/Desktop/modal/Practice/src/pages/compare/ModalButton.js":"9","/Users/zulie/Desktop/modal/Practice/src/pages/compare/BrandBuildingPage.js":"10","/Users/zulie/Desktop/modal/Practice/src/pages/compare/test.js":"11","/Users/zulie/Desktop/modal/Practice/src/pages/compare/BrandPage.js":"12","/Users/zulie/Desktop/modal/Practice/src/pages/compare/BuildingPage.js":"13","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/ModalPage.js":"14","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/Building.js":"15","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/NothingPage.js":"16"},{"size":300,"mtime":1612775600082,"results":"17","hashOfConfig":"18"},{"size":722,"mtime":1612775600082,"results":"19","hashOfConfig":"18"},{"size":1412,"mtime":1612775600084,"results":"20","hashOfConfig":"18"},{"size":2005,"mtime":1612775600084,"results":"21","hashOfConfig":"18"},{"size":2573,"mtime":1612859200983,"results":"22","hashOfConfig":"18"},{"size":557,"mtime":1612745780718,"results":"23","hashOfConfig":"18"},{"size":38,"mtime":1612745780718,"results":"24","hashOfConfig":"18"},{"size":530,"mtime":1612745780718,"results":"25","hashOfConfig":"18"},{"size":2952,"mtime":1612851226648,"results":"26","hashOfConfig":"18"},{"size":6497,"mtime":1612840682145,"results":"27","hashOfConfig":"18"},{"size":844,"mtime":1612775600083,"results":"28","hashOfConfig":"18"},{"size":5570,"mtime":1612857161992,"results":"29","hashOfConfig":"18"},{"size":6218,"mtime":1612848780296,"results":"30","hashOfConfig":"18"},{"size":503,"mtime":1612858875849,"results":"31","hashOfConfig":"18"},{"size":6148,"mtime":1612859256576,"results":"32","hashOfConfig":"18"},{"size":1173,"mtime":1612851280135,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1id7cic",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/Users/zulie/Desktop/modal/Practice/src/index.js",[],["74","75"],"/Users/zulie/Desktop/modal/Practice/src/Routes.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/props/Parent.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/props/Mother.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/compare/CompareButton.js",["76"],"import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ModalButton from './ModalButton';\nimport { API } from '../config';\nimport { atom, useRecoilState } from 'recoil';\n\nexport const compareState = atom({\n    key: 'CompareButton',\n    default: [],\n});\n\nconst CompareButton = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isModalProduct, setIsModalProduct] = useState(false);\n    const [data, setData] = useRecoilState(compareState);\n\n    useEffect(() => {\n        fetch(API)\n            .then((res) => res.json())\n            .then((res) => setData(res.data.content));\n    }, []);\n\n    // data.forEach((el) => console.log(el));\n    // const newArr = data.map((x) => x.estimatedInitialInvestmentCost);\n    // const min = Math.min.apply(null, newArr);\n    // console.log(min);\n\n    const minNumber = () => {\n        const cost = data.map((x) => x.estimatedInitialInvestmentCost);\n        const min = Math.min.apply(null, cost);\n        console.log(min);\n    };\n\n    const handleShowModal = () => {\n        setIsModalOpen(!isModalOpen);\n    };\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    const handleCheck = (e) => {\n        const item = data[2];\n        const { checked } = e.target;\n        if (checked) {\n            // add item\n            addItem(new Date().getMilliseconds(), item);\n        } else {\n            removeItem(item.id);\n        }\n    };\n\n    const addItem = (id, item) => {\n        setData((data) => [...data, { ...item, id }]);\n    };\n\n    const removeItem = (id) => {\n        setData(data.filter((data) => data.id !== id));\n    };\n\n    return (\n        <Fragment>\n            <Container>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n            </Container>\n            <ModalButton\n                handleCheck={handleCheck}\n                handleAddItem={addItem}\n                isModalProduct={isModalProduct}\n                removeItem={removeItem}\n                data={data}\n                minNumber={minNumber}\n                isModalOpen={isModalOpen}\n                handleshowModal={handleShowModal}\n                handleModalProduct={handleModalProduct}\n            />\n        </Fragment>\n    );\n};\n\nexport default CompareButton;\n\nconst Wrapper = styled.div`\n    margin: 10px;\n    font-size: 15px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n\n    input {\n        width: 15px;\n        height: 15px;\n        margin-top: 10px;\n    }\n`;\n","/Users/zulie/Desktop/modal/Practice/src/pages/props/Baby.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/config.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/props/Children.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/compare/ModalButton.js",["77","78","79"],"import React, { Fragment, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport BrandBuildingPage from './BrandBuildingPage';\nimport BrandPage from './BrandPage';\nimport BuildingPage from './BuildingPage';\nimport ModalPage from './components/ModalPage';\n\nconst ModalButton = ({ id, data, removeItem, isModalOpen }) => {\n    const [isModalProduct, setIsModalProduct] = useState(false);\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    return (\n        <Fragment>\n            <Toggle isModalOpen={isModalOpen}>\n                <Compare onClick={() => handleModalProduct()}>\n                    <span>견적 비교하기</span>\n                    <PlaceNumber data={data}>({!data ? 0 : data?.length}/5)</PlaceNumber>\n                    <Arrow />\n                </Compare>\n                <Line />\n                <ModalPage id={id} removeItem={removeItem} isModalProduct={isModalProduct} />\n                {/* <BrandPage id={id} removeItem={removeItem} isModalProduct={isModalProduct} /> */}\n                {/* <BuildingPage id={id} removeItem={removeItem} isModalProduct={isModalProduct} /> */}\n                {/* <BrandBuildingPage id={id} removeItem={removeItem} isModalProduct={isModalProduct} /> */}\n            </Toggle>\n        </Fragment>\n    );\n};\n\nexport default ModalButton;\n\nconst Toggle = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    bottom: 0;\n`;\n\nconst Compare = styled.button`\n    position: relative;\n    justify-content: center;\n    box-sizing: border-box;\n    width: 200px;\n    height: 44px;\n    outline-style: none;\n    margin: 0 0 -1px 208px;\n    border-radius: 8px;\n    background-color: #212121;\n    color: #ffffff;\n    font-weight: 500;\n    padding: 10px 48px 10px 24px;\n\n    span {\n        color: ${(props) => (props.isModalProduct ? '#ffffff' : 'ff5b29')};\n        font-size: 14px;\n        text-align: center;\n        font-family: NotoSansKR;\n        margin: 0 0 7px;\n        width: 128px;\n        height: 24px;\n        line-height: normal;\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst PlaceNumber = styled.span`\n    color: ${(props) => (!props.data ? 'white' : '#ff5b29')};\n`;\n\nconst Line = styled.div`\n    width: 100%;\n    height: 2px;\n    background-color: #212121;\n`;\n\nconst Up = css`\n    content: '';\n    width: 7px;\n    height: 7px;\n    border-top: 3px solid #fff;\n    border-right: 3px solid #fff;\n    display: inline-block;\n    transform: rotate(315deg);\n    position: absolute;\n    top: 17px;\n    right: 35px;\n`;\n\nconst Down = css`\n    content: '';\n    width: 7px;\n    height: 7px;\n    border-top: 3px solid #fff;\n    border-right: 3px solid #fff;\n    display: inline-block;\n    transform: rotate(135deg);\n    position: absolute;\n    top: 12px;\n    right: 35px;\n`;\n\nconst Arrow = styled.div`\n    display: ${(props) => (props.isModalOpen ? `${Down}` : `${Up}`)};\n`;\n","/Users/zulie/Desktop/modal/Practice/src/pages/compare/BrandBuildingPage.js",["80","81","82","83","84"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { API } from '../config';\nimport { compareState } from './CompareButton';\n\nconst ModalPage = ({ id, isModalProduct, removeItem }) => {\n    const [content, setContent] = useRecoilState(compareState);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', '만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <Fragment>\n            <WrapModal isModalProduct={isModalProduct}>\n                <Categories>\n                    <div className='category'>예상 창업비용</div>\n                    <div className='category'>예상 월 수익</div>\n                    <div className='category'>보증금</div>\n                    <div className='category'>권리금</div>\n                    <div className='category'>면적</div>\n                    <div className='category' id='last'>\n                        층\n                    </div>\n                </Categories>\n                <PlaceData onClick={() => removeItem(id)}>\n                    {content?.map((content, idx) => {\n                        return (\n                            <Place key={idx}>\n                                <div className='placeimage'>\n                                    <img src={content.src} alt='store'></img>\n                                    <img className='placeLogo' src={content.logo} alt='logo'></img>\n                                    <div className='delete'>X</div>\n                                </div>\n                                <div className='placetype'>{content.typeBusiness}</div>\n                                <div className='brand'>{content.franchiseBrandName}</div>\n                                <div className='address'>{content.brokerageStoreAddress}</div>\n                                <div className='container'>\n                                    <div className='info'>\n                                        {countNumber(content.estimatedInitialInvestmentCost)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(content.expectationProfit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(content.deposit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(content.premium)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {Math.floor(content.exclusiveAreaPy * 0.3025)}평({content.exclusiveAreaPy}㎡)\n                                    </div>\n                                    <div className='info'>\n                                        {content.floor}/{content.wholeOfFloor}층\n                                    </div>\n                                </div>\n                            </Place>\n                        );\n                    })}\n                </PlaceData>\n            </WrapModal>\n        </Fragment>\n    );\n};\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 457px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 186px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    font-weight: 700;\n\n    .placeimage {\n        position: relative;\n        margin: 2px 2px 0;\n        margin-bottom: 30px;\n\n        img {\n            width: 188px;\n            height: 76px;\n            border-radius: 8px;\n        }\n\n        .placeLogo {\n            border-radius: 14px;\n            position: absolute;\n            top: 55px;\n            left: 75px;\n            width: 40px;\n            height: 40px;\n        }\n    }\n\n    .delete {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: rgba(0, 0, 0, 0.6);\n        color: #fff;\n        font-size: 1em;\n        font-weight: bold;\n        text-align: center;\n        width: 22px;\n        height: 20px;\n        border-radius: 100%;\n        padding-top: 3px;\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n    }\n\n    .address {\n        margin-top: 2px;\n    }\n\n    .container {\n        text-align: right;\n        margin-top: 20px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: #212121;\n        }\n    }\n`;\n\nexport default ModalPage;\n","/Users/zulie/Desktop/modal/Practice/src/pages/compare/test.js",["85"],"function test(number) {\n    var inputNumber = number < 0 ? false : number;\n    var unitWords = ['', '만원'];\n    var splitUnit = 10000;\n    var splitCount = unitWords.length;\n    var resultArray = [];\n    var resultString = '';\n\n    for (var i = 0; i < splitCount; i++) {\n        var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n        unitResult = Math.floor(unitResult);\n        if (unitResult > 0) {\n            resultArray[i] = unitResult;\n        }\n    }\n\n    for (var i = 0; i < resultArray.length; i++) {\n        if (!resultArray[i]) continue;\n        resultString = String(resultArray[i]) + unitWords[i] + resultString;\n    }\n\n    return resultString;\n}\n// console.log(\n//     test(19823710000)\n//         .toString()\n//         .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n// );\n\nexport default test;\n","/Users/zulie/Desktop/modal/Practice/src/pages/compare/BrandPage.js",["86","87"],"import React, { Fragment, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { API } from '../config';\nimport { compareState } from './CompareButton';\nimport { useRecoilState } from 'recoil';\n\nconst ModalPage = ({ id, isModalProduct, removeItem }) => {\n    const [content, setContent] = useRecoilState(compareState);\n\n    useEffect(() => {\n        fetch(API)\n            .then((res) => res.json())\n            .then((res) => {\n                setContent(res.data.content);\n            });\n    }, []);\n    // console.log(content);\n\n    // const newArray = [content];\n    // console.log(newArray);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', '만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <Fragment>\n            <WrapModal isModalProduct={isModalProduct}>\n                <Categories>\n                    <div className='category'>예상 창업비용</div>\n                    <div className='category' id='last'>\n                        예상 월 수익\n                    </div>\n                </Categories>\n                <PlaceData>\n                    {content?.map((content, idx) => {\n                        return (\n                            <Place key={idx} onClick={() => removeItem(id)}>\n                                <div className='logoContainer'>\n                                    <img className='placeLogo' src={content.logo} alt='logo'></img>\n                                    <div className='delete'>\n                                        <span id='cross'>X</span>\n                                    </div>\n                                </div>\n                                <div className='placetype'>{content.typeBusiness}</div>\n                                <div className='brand'>{content.franchiseBrandName}</div>\n                                <div className='container'>\n                                    <div className='info'>\n                                        {countNumber(content.estimatedInitialInvestmentCost)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(content.expectationProfit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                </div>\n                            </Place>\n                        );\n                    })}\n                </PlaceData>\n            </WrapModal>\n        </Fragment>\n    );\n};\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 228px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    /* display: ${(props) => (props.isModalProduct ? 'flex' : 'none')}; */\n    /* display: ${(props) => (props.content === undefined ? 'none' : 'flex')}; */\n    display: flex;\n    font-size: 10px;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 133px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    position: relative;\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    width: 192px;\n    font-weight: 700;\n\n    .logoContainer {\n        position: relative;\n\n        .placeLogo {\n            border-radius: 14px;\n            justify-content: center;\n            width: 40px;\n            height: 40px;\n            margin: 20px 0 0;\n        }\n\n        .delete {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background: rgba(0, 0, 0, 0.6);\n            color: #fff;\n            font-size: 1em;\n            font-weight: bold;\n            text-align: center;\n            width: 22px;\n            height: 20px;\n            border-radius: 100%;\n            padding-top: 3px;\n\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        margin-top: 10px;\n        height: 18px;\n        text-align: center;\n    }\n\n    .brand {\n        height: 20px;\n    }\n    .container {\n        text-align: right;\n        margin-top: 14px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: #212121;\n        }\n    }\n`;\n\nexport default ModalPage;\n","/Users/zulie/Desktop/modal/Practice/src/pages/compare/BuildingPage.js",["88","89","90","91"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport { compareState } from './CompareButton';\n\nconst ModalPage = ({ id, isModalProduct, removeItem }) => {\n    const [content, setContent] = useRecoilState(compareState);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', '만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <Fragment>\n            <ChangeComponent>\n                <WrapModal isModalProduct={isModalProduct}>\n                    <Categories>\n                        <div className='category'>예상 창업비용</div>\n                        <div className='category'>보증금</div>\n                        <div className='category'>권리금</div>\n                        <div className='category'>면적</div>\n                        <div className='category' id='last'>\n                            층\n                        </div>\n                    </Categories>\n                    <PlaceData>\n                        {content?.map((content, idx) => {\n                            return (\n                                <Place key={idx}>\n                                    <div className='placeimage'>\n                                        <img src={content.src} alt='store'></img>\n                                        <div className='delete' onClick={() => removeItem(id)}>\n                                            X\n                                        </div>\n                                    </div>\n                                    <div className='address'>{content.brokerageStoreAddress}</div>\n                                    <div className='container'>\n                                        <div className='info'>\n                                            {countNumber(content.estimatedInitialInvestmentCost)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                        <div className='info'>\n                                            {countNumber(content.deposit)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                        <div className='info'>\n                                            {countNumber(content.premium)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                        <div className='info'>\n                                            {Math.floor(content.exclusiveAreaPy * 0.3025)}평({content.exclusiveAreaPy}\n                                            ㎡)\n                                        </div>\n                                        <div className='info'>\n                                            {content.floor}/{content.wholeOfFloor}층\n                                        </div>\n                                    </div>\n                                </Place>\n                            );\n                        })}\n                    </PlaceData>\n                </WrapModal>\n            </ChangeComponent>\n        </Fragment>\n    );\n};\n\nconst ChangeComponent = styled.div``;\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 457px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 127px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    font-weight: 700;\n\n    .placeimage {\n        position: relative;\n        margin: 2px 2px 0;\n        margin-bottom: 14px;\n\n        img {\n            width: 188px;\n            height: 76px;\n            border-radius: 8px;\n        }\n\n        .placeLogo {\n            border-radius: 14px;\n            position: absolute;\n            top: 55px;\n            left: 75px;\n            width: 40px;\n            height: 40px;\n        }\n    }\n\n    .delete {\n        position: absolute;\n        top: 8px;\n        right: 5px;\n        background: rgba(0, 0, 0, 0.6);\n        color: #fff;\n        font-size: 1em;\n        font-weight: bold;\n        text-align: center;\n        width: 22px;\n        height: 20px;\n        border-radius: 100%;\n        padding-top: 3px;\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n    }\n\n    .address {\n        /* margin-top: 2px; */\n    }\n\n    .container {\n        text-align: right;\n        margin-top: 13.5px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: #212121;\n        }\n    }\n`;\n\nexport default ModalPage;\n","/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/ModalPage.js",[],"/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/Building.js",["92","93"],"/Users/zulie/Desktop/modal/Practice/src/pages/compare/components/NothingPage.js",["94","95"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../CompareButton';\n\nconst EmptyContainer = styled.div`\n    display: ${(props) => (props.setContent !== undefined ? 'none' : 'flex')};\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    max-height: 228px;\n`;\n\nconst Empty = styled.div``;\n\nconst Icon = styled.img`\n    height: 100px;\n    width: 100px;\n    margin: 37px 669px 0 671px;\n`;\n\nconst Text = styled.div`\n    font-size: 14px;\n    color: #212121;\n    text-align: center;\n    font-weight: 600;\n    margin: 14px 0;\n    line-height: 1.4;\n`;\n\nconst NothingPage = ({ isModalProduct }) => {\n    return (\n        <EmptyContainer isModalProduct={isModalProduct}>\n            <Empty>\n                <Icon src='https://i.esdrop.com/d/7IxZWuVOo0.png' alt='empty' />\n                <Text>\n                    비교하고 싶은 견적 내역을 추가해주세요.\n                    <br />\n                    최대 5개까지 비교할 수 있습니다.\n                </Text>\n            </Empty>\n        </EmptyContainer>\n    );\n};\n\nexport default NothingPage;\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":21,"column":8,"nodeType":"102","endLine":21,"endColumn":10,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":17},{"ruleId":"104","severity":1,"message":"109","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":20},{"ruleId":"104","severity":1,"message":"110","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":35},{"ruleId":"104","severity":1,"message":"111","line":1,"column":37,"nodeType":"106","messageId":"107","endLine":1,"endColumn":46},{"ruleId":"104","severity":1,"message":"112","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":13},{"ruleId":"104","severity":1,"message":"113","line":8,"column":21,"nodeType":"106","messageId":"107","endLine":8,"endColumn":31},{"ruleId":"114","severity":1,"message":"115","line":26,"column":18,"nodeType":"106","messageId":"116","endLine":26,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":17,"column":14,"nodeType":"106","messageId":"116","endLine":17,"endColumn":15},{"ruleId":"100","severity":1,"message":"117","line":16,"column":8,"nodeType":"102","endLine":16,"endColumn":10,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":38,"column":18,"nodeType":"106","messageId":"116","endLine":38,"endColumn":19},{"ruleId":"104","severity":1,"message":"110","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":35},{"ruleId":"104","severity":1,"message":"111","line":1,"column":37,"nodeType":"106","messageId":"107","endLine":1,"endColumn":46},{"ruleId":"104","severity":1,"message":"113","line":7,"column":21,"nodeType":"106","messageId":"107","endLine":7,"endColumn":31},{"ruleId":"114","severity":1,"message":"115","line":25,"column":18,"nodeType":"106","messageId":"116","endLine":25,"endColumn":19},{"ruleId":"104","severity":1,"message":"119","line":110,"column":18,"nodeType":"106","messageId":"107","endLine":110,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":127,"column":18,"nodeType":"106","messageId":"116","endLine":127,"endColumn":19},{"ruleId":"104","severity":1,"message":"120","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":24},{"ruleId":"104","severity":1,"message":"121","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":22},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'BrandBuildingPage' is defined but never used.","Identifier","unusedVar","'BrandPage' is defined but never used.","'BuildingPage' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'API' is defined but never used.","'setContent' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'setContent'. Either include it or remove the dependency array.",["125"],"'setData' is assigned a value but never used.","'useRecoilState' is defined but never used.","'compareState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [setData]",{"range":"130","text":"131"},"Update the dependencies array to be: [setContent]",{"range":"132","text":"133"},[662,664],"[setData]",[518,520],"[setContent]"]