[{"/Users/zulie/Desktop/Practice/src/index.js":"1","/Users/zulie/Desktop/Practice/src/Routes.js":"2","/Users/zulie/Desktop/Practice/src/pages/props/Parent.js":"3","/Users/zulie/Desktop/Practice/src/pages/props/Mother.js":"4","/Users/zulie/Desktop/Practice/src/pages/compare/CompareButton.js":"5","/Users/zulie/Desktop/Practice/src/pages/props/Children.js":"6","/Users/zulie/Desktop/Practice/src/pages/props/Baby.js":"7","/Users/zulie/Desktop/Practice/src/pages/config.js":"8","/Users/zulie/Desktop/Practice/src/pages/compare/components/BrandBuilding.js":"9","/Users/zulie/Desktop/Practice/src/pages/compare/components/NothingPage.js":"10","/Users/zulie/Desktop/Practice/src/pages/compare/components/Building.js":"11","/Users/zulie/Desktop/Practice/src/pages/compare/components/Brand.js":"12","/Users/zulie/Desktop/Practice/src/pages/compare/MobileMatchingCompare.js":"13","/Users/zulie/Desktop/Practice/src/styles/CommonStyle.js":"14","/Users/zulie/Desktop/Practice/src/pages/compare/index.js":"15","/Users/zulie/Desktop/Practice/src/pages/compare/PCMatchingCompare.js":"16","/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileBrand.js":"17","/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileNothing.js":"18","/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileBuilding.js":"19","/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileBrandBuilding.js":"20","/Users/zulie/Desktop/Practice/src/styles/GlobalStyle.js":"21"},{"size":376,"mtime":1613455418656,"results":"22","hashOfConfig":"23"},{"size":1417,"mtime":1613454536106,"results":"24","hashOfConfig":"23"},{"size":1412,"mtime":1613353902308,"results":"25","hashOfConfig":"23"},{"size":2005,"mtime":1613353902308,"results":"26","hashOfConfig":"23"},{"size":2501,"mtime":1613451238860,"results":"27","hashOfConfig":"23"},{"size":530,"mtime":1613353902308,"results":"28","hashOfConfig":"23"},{"size":557,"mtime":1613353902308,"results":"29","hashOfConfig":"23"},{"size":38,"mtime":1613353902308,"results":"30","hashOfConfig":"23"},{"size":7494,"mtime":1613460312721,"results":"31","hashOfConfig":"23"},{"size":1246,"mtime":1613386353893,"results":"32","hashOfConfig":"23"},{"size":6165,"mtime":1613461863881,"results":"33","hashOfConfig":"23"},{"size":5503,"mtime":1613452158919,"results":"34","hashOfConfig":"23"},{"size":3306,"mtime":1613468665467,"results":"35","hashOfConfig":"23"},{"size":234,"mtime":1613375121917,"results":"36","hashOfConfig":"23"},{"size":440,"mtime":1613455425407,"results":"37","hashOfConfig":"23"},{"size":4527,"mtime":1613386353893,"results":"38","hashOfConfig":"23"},{"size":6908,"mtime":1613468927449,"results":"39","hashOfConfig":"23"},{"size":1269,"mtime":1613466786142,"results":"40","hashOfConfig":"23"},{"size":7611,"mtime":1613467728089,"results":"41","hashOfConfig":"23"},{"size":8652,"mtime":1613467673922,"results":"42","hashOfConfig":"23"},{"size":260,"mtime":1613455511470,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1bfmexk",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/zulie/Desktop/Practice/src/index.js",[],["97","98"],"/Users/zulie/Desktop/Practice/src/Routes.js",[],"/Users/zulie/Desktop/Practice/src/pages/props/Parent.js",[],"/Users/zulie/Desktop/Practice/src/pages/props/Mother.js",[],"/Users/zulie/Desktop/Practice/src/pages/compare/CompareButton.js",[],"/Users/zulie/Desktop/Practice/src/pages/props/Children.js",[],"/Users/zulie/Desktop/Practice/src/pages/props/Baby.js",[],"/Users/zulie/Desktop/Practice/src/pages/config.js",[],"/Users/zulie/Desktop/Practice/src/pages/compare/components/BrandBuilding.js",["99","100","101"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../PCMatchingCompare';\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 457px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 186px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    font-weight: 700;\n\n    .placeimage {\n        position: relative;\n        margin: 2px 2px 0;\n        margin-bottom: 30px;\n\n        img {\n            width: 188px;\n            height: 76px;\n            border-radius: 8px;\n        }\n\n        .placeLogo {\n            border-radius: 14px;\n            position: absolute;\n            top: 55px;\n            left: 75px;\n            width: 40px;\n            height: 40px;\n        }\n\n        .background {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background-color: rgba(0, 0, 0, 0.6);\n            width: 20px;\n            height: 20px;\n            border-radius: 100%;\n\n            .fa-times {\n                color: #fff;\n                font-weight: 600;\n                margin-top: 3px;\n            }\n\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n    }\n\n    .address {\n        margin-top: 2px;\n    }\n\n    .container {\n        text-align: right;\n        margin-top: 20px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n        }\n\n        #cost {\n            color: ${(props) => (props.min ? '#005cff' : '#212121')};\n        }\n\n        #profit {\n            color: ${(props) => (props.max ? '#005cff' : '#212121')};\n        }\n    }\n`;\n\nconst BrandBuilding = ({ isModalProduct, removeItem }) => {\n    const [data, setData] = useRecoilState(compareState);\n\n    const cost = data?.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n\n    const profit = data?.map((x) => x.expectationProfit);\n    const max = Math.max.apply(null, profit);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', ' 만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <>\n            <WrapModal isModalProduct={isModalProduct}>\n                <Categories>\n                    <div className='category'>예상 창업비용</div>\n                    <div className='category'>예상 월 수익</div>\n                    <div className='category'>보증금</div>\n                    <div className='category'>권리금</div>\n                    <div className='category'>면적</div>\n                    <div className='category' id='last'>\n                        층\n                    </div>\n                </Categories>\n                <PlaceData>\n                    {data?.map((data, idx) => {\n                        console.log(data);\n                        return (\n                            <Place\n                                key={idx}\n                                max={max === data.expectationProfit}\n                                min={min === data.estimatedInitialInvestmentCost}\n                            >\n                                {/* {console.log(data.expectationProfit)} */}\n                                <div className='placeimage'>\n                                    <img src={data.src} alt='store'></img>\n                                    <img className='placeLogo' src={data.logo} alt='logo'></img>\n                                    <div className='background'>\n                                        <i className='fas fa-times' onClick={() => removeItem(data.id)}></i>\n                                    </div>\n                                </div>\n                                <div className='placetype'>{data.typeBusiness}</div>\n                                <div className='brand'>{data.franchiseBrandName}</div>\n                                <div className='address'>{data.brokerageStoreAddress}</div>\n                                <div className='container'>\n                                    <div className='info' id='cost'>\n                                        {countNumber(data.estimatedInitialInvestmentCost)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info' id='profit'>\n                                        {countNumber(data.expectationProfit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(data.deposit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {data.premium === '없음'\n                                            ? '없음'\n                                            : countNumber(data.premium)\n                                                  .toString()\n                                                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {Math.floor(data.exclusiveAreaPy * 0.3025)}평 ({data.exclusiveAreaPy}\n                                        ㎡)\n                                    </div>\n                                    <div className='info'>\n                                        {data.floor}/{data.wholeOfFloor}층\n                                    </div>\n                                </div>\n                            </Place>\n                        );\n                    })}\n                </PlaceData>\n            </WrapModal>\n        </>\n    );\n};\n\nexport default BrandBuilding;\n","/Users/zulie/Desktop/Practice/src/pages/compare/components/NothingPage.js",["102","103"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../MobileMatchingCompare';\n\nconst EmptyContainer = styled.div`\n    display: ${(props) => (props.setContent !== undefined ? 'none' : 'flex')};\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    max-height: 228px;\n`;\n\nconst Empty = styled.div``;\n\nconst Icon = styled.img`\n    height: 100px;\n    width: 100px;\n    margin: 37px 669px 0 671px;\n`;\n\nconst Text = styled.div`\n    font-size: 14px;\n    color: #212121;\n    text-align: center;\n    font-weight: 600;\n    margin: 14px 0;\n    line-height: 1.4;\n`;\n\nconst NothingPage = ({ isModalProduct }) => {\n    const [content, setContent] = useRecoilState(compareState);\n\n    return (\n        <EmptyContainer isModalProduct={isModalProduct}>\n            <Empty>\n                <Icon src='https://i.esdrop.com/d/7IxZWuVOo0.png' alt='empty' />\n                <Text>\n                    비교하고 싶은 견적 내역을 추가해주세요.\n                    <br />\n                    최대 5개까지 비교할 수 있습니다.\n                </Text>\n            </Empty>\n        </EmptyContainer>\n    );\n};\n\nexport default NothingPage;\n","/Users/zulie/Desktop/Practice/src/pages/compare/components/Building.js",["104","105"],"import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../PCMatchingCompare';\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 457px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 127px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    font-weight: 700;\n\n    .placeimage {\n        position: relative;\n        margin: 2px 2px 0;\n        margin-bottom: 14px;\n\n        img {\n            width: 188px;\n            height: 76px;\n            border-radius: 8px;\n        }\n\n        .background {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background-color: rgba(0, 0, 0, 0.6);\n            width: 20px;\n            height: 20px;\n            border-radius: 100%;\n\n            .fa-times {\n                color: #fff;\n                font-weight: 600;\n                margin-top: 3px;\n            }\n\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n    }\n    .container {\n        text-align: right;\n        margin-top: 13.5px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: ${(props) => (props.minNumber ? 'blue' : 'black')};\n        }\n\n        #cost {\n            color: ${(props) => (props.min ? '#005cff' : '#212121')};\n        }\n    }\n`;\n\nconst Building = ({ isModalProduct, removeItem }) => {\n    const [data, setData] = useRecoilState(compareState);\n\n    const cost = data.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n    // console.log(min);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', ' 만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <Fragment>\n            <WrapModal isModalProduct={isModalProduct}>\n                <Categories>\n                    <div className='category'>예상 창업비용</div>\n                    <div className='category'>보증금</div>\n                    <div className='category'>권리금</div>\n                    <div className='category'>면적</div>\n                    <div className='category' id='last'>\n                        층\n                    </div>\n                </Categories>\n                <PlaceData>\n                    {data?.map((data, idx) => {\n                        return (\n                            <Place key={idx} min={min === data.estimatedInitialInvestmentCost}>\n                                <div className='placeimage'>\n                                    <img src={data.src} alt='store'></img>\n                                    <div className='background'>\n                                        <i className='fas fa-times' onClick={() => removeItem(data.id)}></i>\n                                    </div>\n                                </div>\n                                <div className='address'>{data.brokerageStoreAddress}</div>\n                                <div className='container'>\n                                    <div className='info' id='cost'>\n                                        {countNumber(data.estimatedInitialInvestmentCost)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info' id='max'>\n                                        {countNumber(data.deposit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {data.premium === '없음'\n                                            ? '없음'\n                                            : countNumber(data.premium)\n                                                  .toString()\n                                                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {Math.floor(data.exclusiveAreaPy * 0.3025)}평 ({data.exclusiveAreaPy}㎡)\n                                    </div>\n                                    <div className='info'>\n                                        {data.floor}/{data.wholeOfFloor}층\n                                    </div>\n                                </div>\n                            </Place>\n                        );\n                    })}\n                </PlaceData>\n            </WrapModal>\n        </Fragment>\n    );\n};\n\nexport default Building;\n","/Users/zulie/Desktop/Practice/src/pages/compare/components/Brand.js",["106","107"],"import React from 'react';\nimport styled from 'styled-components';\nimport { compareState } from '../CompareButton';\nimport { useRecoilState } from 'recoil';\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 228px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    display: flex;\n    font-size: 10px;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 133px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    position: relative;\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    width: 192px;\n    font-weight: 700;\n\n    .logoContainer {\n        position: relative;\n\n        .placeLogo {\n            border-radius: 14px;\n            justify-content: center;\n            width: 40px;\n            height: 40px;\n            margin: 20px 0 0;\n        }\n\n        .background {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background-color: rgba(0, 0, 0, 0.6);\n            width: 20px;\n            height: 20px;\n            border-radius: 100%;\n\n            .fa-times {\n                color: #fff;\n                font-weight: 600;\n                margin-top: 3px;\n            }\n\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        margin-top: 10px;\n        height: 18px;\n        text-align: center;\n    }\n\n    .brand {\n        height: 20px;\n    }\n\n    .container {\n        text-align: right;\n        margin-top: 14px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: #212121;\n        }\n\n        #cost {\n            color: ${(props) => (props.min ? '#005cff' : '#212121')};\n        }\n\n        #profit {\n            color: ${(props) => (props.max ? '#005cff' : '#212121')};\n        }\n    }\n`;\n\nconst Brand = ({ isModalProduct, removeItem }) => {\n    const [data, setData] = useRecoilState(compareState);\n\n    const cost = data?.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n\n    const profit = data?.map((x) => x.expectationProfit);\n    const max = Math.max.apply(null, profit);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', '만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <WrapModal isModalProduct={isModalProduct}>\n            <Categories>\n                <div className='category'>예상 창업비용</div>\n                <div className='category' id='last'>\n                    예상 월 수익\n                </div>\n            </Categories>\n            <PlaceData>\n                {data?.map((data, idx) => {\n                    return (\n                        <Place\n                            key={idx}\n                            min={min === data.estimatedInitialInvestmentCost}\n                            max={max === data.expectationProfit}\n                        >\n                            <div className='logoContainer'>\n                                <img className='placeLogo' src={data.logo} alt='logo'></img>\n                                <div className='background'>\n                                    <i className='fas fa-times' onClick={() => removeItem(data.id)}></i>\n                                </div>\n                            </div>\n                            <div className='placetype'>{data.typeBusiness}</div>\n                            <div className='brand'>{data.franchiseBrandName}</div>\n                            <div className='container'>\n                                <div className='info' id='cost'>\n                                    {countNumber(data.estimatedInitialInvestmentCost)\n                                        .toString()\n                                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                </div>\n                                <div className='info' id='profit'>\n                                    {countNumber(data.expectationProfit)\n                                        .toString()\n                                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                </div>\n                            </div>\n                        </Place>\n                    );\n                })}\n            </PlaceData>\n        </WrapModal>\n    );\n};\n\nexport default Brand;\n","/Users/zulie/Desktop/Practice/src/pages/compare/MobileMatchingCompare.js",["108","109","110"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { API } from '../config';\nimport { atom, useRecoilState } from 'recoil';\nimport { useHistory } from 'react-router-dom';\nimport MobileBrand from './components/MobileBrand';\nimport MobileNothing from './components/MobileNothing';\n\n//체크박스\nconst Wrapper = styled.div`\n    margin: 10px;\n    font-size: 15px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    input {\n        width: 15px;\n        height: 15px;\n        margin-top: 10px;\n    }\n`;\n\nconst MatchingContainer = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n`;\n\nconst Compare = styled.button`\n    position: absolute;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    box-sizing: border-box;\n    width: 153px;\n    height: 44px;\n    bottom: 0;\n    outline-style: none;\n    box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.1);\n    margin: 4px 104px 40px;\n    border-radius: 26px;\n    background-color: #424242;\n    color: #ffffff;\n    font-weight: 500;\n    border: 0;\n    outline: 0;\n\n    span {\n        color: ${(props) => (props.isModalProduct ? '#ffffff' : 'ff5b29')};\n        font-size: 14px;\n        text-align: center;\n        font-family: NotoSansKR;\n        line-height: normal;\n        margin-right: 2px;\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nconst PlaceNumber = styled.span`\n    color: ${(props) => (!props.data ? 'white' : '#ff5b29')};\n`;\n\nexport const compareState = atom({\n    key: 'CompareButton',\n    default: [],\n});\n\nconst MobileMatchingCompare = () => {\n    const history = useHistory();\n    const [data, setData] = useRecoilState(compareState);\n    const [newData, setNewData] = useState();\n\n    const goToDetail = () => {\n        history.push('/mobilebrand');\n        // history.push('/mobilebuilding');\n        // history.push('/mobilebrandbuilding');\n    };\n\n    useEffect(() => {\n        fetch(API)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res.data.content);\n                setNewData(res.data.new_content);\n            });\n    }, []);\n\n    const handleCheck = (e) => {\n        const item = newData[0];\n        const { checked } = e.target;\n        if (checked) {\n            addItem(new Date().getMilliseconds(), item);\n        } else {\n            console.log(item);\n            removeItem(item.id);\n        }\n    };\n\n    const addItem = (id, item) => {\n        if (data?.length >= 5) return;\n        setData((data) => [...data, { ...item, id }]);\n    };\n\n    const removeItem = (el) => {\n        setData(data.filter((data) => data.id !== el));\n    };\n\n    return (\n        <MatchingContainer>\n            <Container>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n            </Container>\n            <Compare onClick={goToDetail} removeItem={removeItem}>\n                <span>견적 비교하기</span>\n                <PlaceNumber data={data}>({!data ? 0 : data?.length}/5)</PlaceNumber>\n            </Compare>\n        </MatchingContainer>\n    );\n};\n\nexport default MobileMatchingCompare;\n","/Users/zulie/Desktop/Practice/src/styles/CommonStyle.js",[],["111","112"],"/Users/zulie/Desktop/Practice/src/pages/compare/index.js",[],"/Users/zulie/Desktop/Practice/src/pages/compare/PCMatchingCompare.js",["113","114","115","116"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { API } from '../config';\nimport BrandBuilding from './components/BrandBuilding';\nimport NothingPage from './components/NothingPage';\nimport { atom, useRecoilState } from 'recoil';\nimport Building from './components/Building';\nimport Brand from './components/Brand';\n\nconst Wrapper = styled.div`\n    margin: 10px;\n    font-size: 15px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    input {\n        width: 15px;\n        height: 15px;\n        margin-top: 10px;\n    }\n`;\n\nconst Toggle = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    bottom: 0;\n`;\n\nconst Compare = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    width: 200px;\n    height: 44px;\n    outline-style: none;\n    margin: 0 0 -1px 208px;\n    border-radius: 8px 8px 0 0;\n    background-color: #212121;\n    color: #ffffff;\n    font-weight: 500;\n    border: 0;\n    outline: 0;\n\n    span {\n        color: ${(props) => (props.isModalProduct ? '#ffffff' : 'ff5b29')};\n        font-size: 14px;\n        text-align: center;\n        font-family: NotoSansKR;\n        line-height: normal;\n        margin-right: 2px;\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    .fa-angle-up {\n        font-size: 22px;\n        margin-left: 6px;\n    }\n\n    .fa-angle-down {\n        font-size: 22px;\n        margin-left: 6px;\n    }\n`;\n\nconst PlaceNumber = styled.span`\n    color: ${(props) => (!props.data ? 'white' : '#ff5b29')};\n`;\n\nconst Line = styled.div`\n    width: 100%;\n    height: 2px;\n    background-color: #212121;\n`;\n\nexport const compareState = atom({\n    key: 'CompareButton',\n    default: [],\n});\n\nconst PCMatchingCompare = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isModalProduct, setIsModalProduct] = useState(false);\n    const [data, setData] = useRecoilState(compareState);\n    const [newData, setNewData] = useState();\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    useEffect(() => {\n        fetch(API)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res.data.content);\n                setNewData(res.data.new_content);\n            });\n    }, []);\n\n    const handleShowModal = () => {\n        setIsModalOpen(!isModalOpen);\n    };\n\n    const handleCheck = (e) => {\n        const item = newData[0];\n        const { checked } = e.target;\n        if (checked) {\n            addItem(new Date().getMilliseconds(), item);\n        } else {\n            console.log(item);\n            removeItem(item.id);\n        }\n    };\n\n    const addItem = (id, item) => {\n        if (data?.length >= 5) return;\n        setData((data) => [...data, { ...item, id }]);\n    };\n\n    const removeItem = (el) => {\n        setData(data.filter((data) => data.id !== el));\n    };\n\n    return (\n        <>\n            <Container>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n            </Container>\n            <Toggle isModalOpen={isModalOpen}>\n                <Compare onClick={() => handleModalProduct()}>\n                    <span>견적 비교하기</span>\n                    <PlaceNumber data={data}>({!data ? 0 : data?.length}/5)</PlaceNumber>\n                    {isModalProduct ? (\n                        <i className='fa fa-angle-down' aria-hidden='true'></i>\n                    ) : (\n                        <i className='fa fa-angle-up' aria-hidden='true'></i>\n                    )}\n                </Compare>\n                <Line />\n                {data.length !== 0 ? (\n                    <BrandBuilding isModalProduct={isModalProduct} removeItem={removeItem} />\n                ) : (\n                    // <Building isModalProduct={isModalProduct} removeItem={removeItem} />\n                    // <Brand isModalProduct={isModalProduct} removeItem={removeItem} />\n                    <NothingPage isModalProduct={isModalProduct} />\n                )}\n            </Toggle>\n        </>\n    );\n};\n\nexport default PCMatchingCompare;\n","/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileBrand.js",["117"],"/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileNothing.js",["118","119","120"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../MobileMatchingCompare';\n\nconst NothingContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    font-family: NotoSansKR;\n`;\n\nconst Content = styled.div`\n    text-align: center;\n\n    img {\n        width: 100px;\n        height: 100px;\n        margin-top: 20px;\n        margin: 20px auto 14px;\n    }\n\n    .text {\n        font-size: 14px;\n        line-height: 1.43;\n        font-weight: 500;\n        color: #212121;\n        text-align: center;\n    }\n`;\n\nconst MobileNothing = () => {\n    const history = useHistory();\n\n    const goToMain = () => {\n        history.push('/mobilematching');\n    };\n\n    return (\n        <>\n            <NothingContainer>\n                <Content>\n                    <img src='https://i.esdrop.com/d/7IxZWuVOo0.png' alt='nothing' />\n                    <div className='text'>\n                        비교하고 싶은 견적 내역을 추가해주세요. <br /> 최대 5개까지 비교할 수 있습니다.\n                    </div>\n                </Content>\n            </NothingContainer>\n        </>\n    );\n};\n\nexport default MobileNothing;\n","/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileBuilding.js",["121"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../MobileMatchingCompare';\nimport MobileNothing from './MobileNothing';\n\nconst BrandContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n`;\n\nconst Title = styled.div`\n    width: 100%;\n    display: flex;\n    margin-top: 19px;\n    margin-bottom: 20px;\n    justify-content: center;\n    height: 40px;\n    text-align: center;\n    border-bottom: 1px solid #eeeeee;\n\n    .delete {\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        top: 25px;\n        right: 18px;\n    }\n`;\n\nconst Compare = styled.div`\n    font-size: 14px;\n    color: #424242;\n    font-weight: 500;\n    text-align: center;\n    margin: 10px auto 9px;\n    font-family: NotoSansKR;\n    padding-top: 2px;\n`;\n\nconst Wrapper = styled.div``;\n\nconst Place = styled.div`\n    position: relative;\n    margin: 14px 0 0;\n\n    .store {\n        justify-content: center;\n        width: 80px;\n        height: 79px;\n        margin-right: 14px;\n    }\n`;\n\nconst NameContainer = styled.div`\n    display: flex;\n    width: 320px;\n    height: 40px;\n`;\n\nconst Info = styled.div`\n    .brand {\n        margin-top: 4px;\n        font-size: 12px;\n        font-weight: bold;\n        height: 14px;\n    }\n\n    .placetype {\n        font-size: 10px;\n        color: #212121;\n        font-weight: 500;\n        height: 15px;\n    }\n\n    .background {\n        position: absolute;\n        top: 0px;\n        right: 10px;\n        background-color: rgba(0, 0, 0, 0.6);\n        width: 16px;\n        height: 16px;\n        border-radius: 100%;\n\n        .fa-times {\n            position: absolute;\n            color: #fff;\n            font-weight: 600;\n            font-size: 12px;\n            top: 2px;\n            left: 3.75px;\n        }\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n`;\n\nconst Detail = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n\nconst CostContainer = styled.div`\n    display: flex;\n    justify-content: space-start;\n    margin-left: 94px;\n    margin-top: 4px;\n    border-bottom: 1px solid #eeeeee;\n    padding-bottom: 14px;\n    font-family: NotoSansKR;\n\n    .category {\n        font-size: 10px;\n        height: 15px;\n        color: #9e9e9e;\n        font-weight: 500;\n    }\n`;\n\nconst DetailInfo = styled.div`\n    width: 82px;\n    height: 35px;\n\n    .info {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n        margin-top: 2px;\n    }\n\n    #cost {\n        color: ${(props) => (props.min ? '#005cff' : '#212121')};\n    }\n\n    #profit {\n        color: ${(props) => (props.max ? '#005cff' : '#212121')};\n    }\n`;\n\nconst MobileBrand = () => {\n    const history = useHistory();\n\n    const goToMain = () => {\n        history.push('/mobilematching');\n    };\n\n    const [data, setData] = useRecoilState(compareState);\n\n    const cost = data?.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', ' 만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    const removeItem = (el) => {\n        setData(data.filter((data) => data.id !== el));\n    };\n\n    console.log(data.length);\n    return (\n        <BrandContainer>\n            <Title>\n                <Compare>견적 비교하기</Compare>\n                <img\n                    className='delete'\n                    src='https://i.esdrop.com/d/FtJcG4gqX6.png'\n                    alt='delete'\n                    onClick={() => goToMain()}\n                ></img>\n            </Title>\n            <Wrapper>\n                {data?.length === 0 && <MobileNothing />}\n                {data?.map((data, idx) => {\n                    return (\n                        <Place key={idx}>\n                            <Detail>\n                                <NameContainer>\n                                    <img className='store' src={data.src} alt='logo'></img>\n                                    <Info>\n                                        <div className='brand'>{data.brokerageStoreAddress}</div>\n                                        <div className='placetype'>\n                                            {Math.floor(data.exclusiveAreaPy * 0.3025)}평 ({data.exclusiveAreaPy}\n                                            ㎡) | {data.floor}/{data.wholeOfFloor}층\n                                        </div>\n                                        <div className='background'>\n                                            <i className='fas fa-times' onClick={() => removeItem(data.id)}></i>\n                                        </div>\n                                    </Info>\n                                </NameContainer>\n                                <CostContainer>\n                                    <DetailInfo>\n                                        <div className='category'>보증금</div>\n                                        <div className='info' id='profit'>\n                                            {countNumber(data.deposit)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                    </DetailInfo>\n                                    <DetailInfo>\n                                        <div className='category'>권리금</div>\n                                        <div className='info' id='profit'>\n                                            {data.premium === '없음'\n                                                ? '없음'\n                                                : countNumber(data.premium)\n                                                      .toString()\n                                                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                    </DetailInfo>\n                                    <DetailInfo min={min === data.estimatedInitialInvestmentCost}>\n                                        <div className='category'>예상 창업비용</div>\n                                        <div className='info' id='cost'>\n                                            {countNumber(data.estimatedInitialInvestmentCost)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                    </DetailInfo>\n                                </CostContainer>\n                            </Detail>\n                        </Place>\n                    );\n                })}\n            </Wrapper>\n        </BrandContainer>\n    );\n};\n\nexport default MobileBrand;\n","/Users/zulie/Desktop/Practice/src/pages/compare/components/MobileBrandBuilding.js",["122"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../MobileMatchingCompare';\nimport MobileNothing from './MobileNothing';\n\nconst BrandContainer = styled.div`\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n`;\n\nconst Title = styled.div`\n    width: 100%;\n    display: flex;\n    margin-top: 19px;\n    margin-bottom: 20px;\n    justify-content: center;\n    height: 40px;\n    text-align: center;\n    border-bottom: 1px solid #eeeeee;\n\n    .delete {\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        top: 25px;\n        right: 18px;\n    }\n`;\n\nconst Compare = styled.div`\n    font-size: 14px;\n    color: #424242;\n    font-weight: 500;\n    text-align: center;\n    margin: 10px auto 9px;\n    font-family: NotoSansKR;\n    padding-top: 2px;\n`;\n\nconst Wrapper = styled.div``;\n\nconst Place = styled.div`\n    position: relative;\n    margin: 14px 0 0;\n\n    .store {\n        justify-content: center;\n        width: 42px;\n        height: 79px;\n        margin-right: 12px;\n    }\n\n    .logo {\n        position: absolute;\n        border-radius: 10px;\n        top: 6px;\n        left: 20px;\n        width: 28px;\n        height: 28px;\n        border: 1px solid #eeeeee;\n    }\n`;\n\nconst NameContainer = styled.div`\n    display: flex;\n    width: 320px;\n    height: 40px;\n`;\n\nconst Info = styled.div`\n    .brand {\n        margin-top: 4px;\n        font-size: 12px;\n        font-weight: bold;\n        height: 18px;\n    }\n\n    .placetype {\n        font-size: 10px;\n        color: #212121;\n        font-weight: 500;\n        height: 15px;\n    }\n\n    .background {\n        position: absolute;\n        top: 0px;\n        right: 10px;\n        background-color: rgba(0, 0, 0, 0.6);\n        width: 16px;\n        height: 16px;\n        border-radius: 100%;\n\n        .fa-times {\n            position: absolute;\n            color: #fff;\n            font-weight: 600;\n            font-size: 12px;\n            top: 2px;\n            left: 3.75px;\n        }\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n`;\n\nconst Detail = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`;\n\nconst CostContainer = styled.div`\n    display: flex;\n    justify-content: space-start;\n    margin-left: 54px;\n    margin-top: 14px;\n    border-bottom: 1px solid #eeeeee;\n    padding-bottom: 4px;\n    font-family: NotoSansKR;\n\n    .category {\n        font-size: 10px;\n        height: 15px;\n        color: #9e9e9e;\n        font-weight: 500;\n    }\n`;\n\nconst DetailInfo = styled.div`\n    width: 70px;\n    height: 35px;\n\n    .info {\n        font-size: 10px;\n        font-weight: 500;\n        height: 18px;\n        margin-top: 2px;\n    }\n\n    #cost {\n        color: ${(props) => (props.min ? '#005cff' : '#212121')};\n    }\n\n    #profit {\n        color: ${(props) => (props.max ? '#005cff' : '#212121')};\n    }\n`;\n\nconst MobileBrand = () => {\n    const history = useHistory();\n\n    const goToMain = () => {\n        history.push('/mobilematching');\n    };\n\n    const [data, setData] = useRecoilState(compareState);\n\n    const cost = data?.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n\n    const profit = data?.map((x) => x.expectationProfit);\n    const max = Math.max.apply(null, profit);\n\n    const removeItem = (el) => {\n        setData(data.filter((data) => data.id !== el));\n    };\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', ' 만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <BrandContainer>\n            <Title>\n                <Compare>견적 비교하기</Compare>\n                <img\n                    className='delete'\n                    src='https://i.esdrop.com/d/FtJcG4gqX6.png'\n                    alt='delete'\n                    onClick={() => goToMain()}\n                ></img>\n            </Title>\n            <Wrapper>\n                {data?.length === 0 && <MobileNothing />}\n                {data?.map((data, idx) => {\n                    return (\n                        <Place key={idx}>\n                            <Detail>\n                                <NameContainer>\n                                    <img className='store' src={data.src} alt='store' />\n                                    <img className='logo' src={data.logo} alt='logo' />\n                                    <Info>\n                                        <div className='brand'>\n                                            {data.brokerageStoreAddress} | {data.franchiseBrandName}\n                                        </div>\n                                        <div className='placetype'>\n                                            {Math.floor(data.exclusiveAreaPy * 0.3025)}평 ({data.exclusiveAreaPy}\n                                            ㎡) | {data.floor}/{data.wholeOfFloor}층\n                                        </div>\n                                        <div className='background'>\n                                            <i className='fas fa-times' onClick={() => removeItem(data.id)}></i>\n                                        </div>\n                                    </Info>\n                                </NameContainer>\n                                <CostContainer>\n                                    <DetailInfo>\n                                        <div className='category'>보증금</div>\n                                        <div className='info' id='profit'>\n                                            {countNumber(data.deposit)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                    </DetailInfo>\n                                    <DetailInfo>\n                                        <div className='category'>권리금</div>\n                                        <div className='info' id='profit'>\n                                            {data.premium === '없음'\n                                                ? '없음'\n                                                : countNumber(data.premium)\n                                                      .toString()\n                                                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                    </DetailInfo>\n                                    <DetailInfo min={min === data.estimatedInitialInvestmentCost}>\n                                        <div className='category'>예상 창업비용</div>\n                                        <div className='info' id='cost'>\n                                            {countNumber(data.estimatedInitialInvestmentCost)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                    </DetailInfo>\n                                    <DetailInfo min={max === data.expectationProfit}>\n                                        <div className='category'>예상 월 수익</div>\n                                        <div className='info' id='cost'>\n                                            {countNumber(data.expectationProfit)\n                                                .toString()\n                                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                        </div>\n                                    </DetailInfo>\n                                </CostContainer>\n                            </Detail>\n                        </Place>\n                    );\n                })}\n            </Wrapper>\n        </BrandContainer>\n    );\n};\n\nexport default MobileBrand;\n","/Users/zulie/Desktop/Practice/src/styles/GlobalStyle.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"131","line":118,"column":18,"nodeType":"129","messageId":"130","endLine":118,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":142,"column":18,"nodeType":"129","messageId":"134","endLine":142,"endColumn":19},{"ruleId":"127","severity":1,"message":"135","line":30,"column":12,"nodeType":"129","messageId":"130","endLine":30,"endColumn":19},{"ruleId":"127","severity":1,"message":"136","line":30,"column":21,"nodeType":"129","messageId":"130","endLine":30,"endColumn":31},{"ruleId":"127","severity":1,"message":"131","line":101,"column":18,"nodeType":"129","messageId":"130","endLine":101,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":123,"column":18,"nodeType":"129","messageId":"134","endLine":123,"endColumn":19},{"ruleId":"127","severity":1,"message":"131","line":113,"column":18,"nodeType":"129","messageId":"130","endLine":113,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":137,"column":18,"nodeType":"129","messageId":"134","endLine":137,"endColumn":19},{"ruleId":"127","severity":1,"message":"137","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":19},{"ruleId":"127","severity":1,"message":"138","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":92,"column":8,"nodeType":"141","endLine":92,"endColumn":10,"suggestions":"142"},{"ruleId":"123","replacedBy":"143"},{"ruleId":"125","replacedBy":"144"},{"ruleId":"127","severity":1,"message":"145","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":16},{"ruleId":"127","severity":1,"message":"146","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":104,"column":8,"nodeType":"141","endLine":104,"endColumn":10,"suggestions":"147"},{"ruleId":"127","severity":1,"message":"148","line":106,"column":11,"nodeType":"129","messageId":"130","endLine":106,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":182,"column":18,"nodeType":"129","messageId":"134","endLine":182,"endColumn":19},{"ruleId":"127","severity":1,"message":"149","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":24},{"ruleId":"127","severity":1,"message":"150","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":22},{"ruleId":"127","severity":1,"message":"151","line":35,"column":11,"nodeType":"129","messageId":"130","endLine":35,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":173,"column":18,"nodeType":"129","messageId":"134","endLine":173,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":190,"column":18,"nodeType":"129","messageId":"134","endLine":190,"endColumn":19},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'MobileBrand' is defined but never used.","'MobileNothing' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array.","ArrayExpression",["154"],["152"],["153"],"'Building' is defined but never used.","'Brand' is defined but never used.",["155"],"'handleShowModal' is assigned a value but never used.","'useRecoilState' is defined but never used.","'compareState' is defined but never used.","'goToMain' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"156","fix":"158"},"Update the dependencies array to be: [setData]",{"range":"159","text":"160"},{"range":"161","text":"160"},[2167,2169],"[setData]",[2366,2368]]