[{"/Users/julie/Desktop/oasis/Practice/src/index.js":"1","/Users/julie/Desktop/oasis/Practice/src/Routes.js":"2","/Users/julie/Desktop/oasis/Practice/src/pages/props/Parent.js":"3","/Users/julie/Desktop/oasis/Practice/src/pages/props/Mother.js":"4","/Users/julie/Desktop/oasis/Practice/src/pages/compare/CompareButton.js":"5","/Users/julie/Desktop/oasis/Practice/src/pages/props/Baby.js":"6","/Users/julie/Desktop/oasis/Practice/src/pages/props/Children.js":"7","/Users/julie/Desktop/oasis/Practice/src/pages/config.js":"8","/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalButton.js":"9","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/BrandBuilding.js":"10","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/NothingPage.js":"11","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/Building.js":"12","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/Brand.js":"13","/Users/julie/Desktop/oasis/Practice/src/pages/compare/modalButton.js":"14"},{"size":300,"mtime":1613039376641,"results":"15","hashOfConfig":"16"},{"size":613,"mtime":1613039376639,"results":"17","hashOfConfig":"16"},{"size":1412,"mtime":1613039376650,"results":"18","hashOfConfig":"16"},{"size":2005,"mtime":1613039376649,"results":"19","hashOfConfig":"16"},{"size":2517,"mtime":1613315696670,"results":"20","hashOfConfig":"16"},{"size":557,"mtime":1612683922266,"results":"21","hashOfConfig":"16"},{"size":530,"mtime":1612683922266,"results":"22","hashOfConfig":"16"},{"size":38,"mtime":1612683922266,"results":"23","hashOfConfig":"16"},{"size":2730,"mtime":1613316381003,"results":"24","hashOfConfig":"16"},{"size":7216,"mtime":1613316472966,"results":"25","hashOfConfig":"16"},{"size":1238,"mtime":1613315618866,"results":"26","hashOfConfig":"16"},{"size":6022,"mtime":1613316220361,"results":"27","hashOfConfig":"16"},{"size":5500,"mtime":1613316001936,"results":"28","hashOfConfig":"16"},{"size":2730,"mtime":1613302184081,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jud00b",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/julie/Desktop/oasis/Practice/src/index.js",[],["64","65"],"/Users/julie/Desktop/oasis/Practice/src/Routes.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Parent.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Mother.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/CompareButton.js",["66","67"],"import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ModalButton from '../compare/ModalButton';\nimport { API } from '../config';\nimport { atom, useRecoilState } from 'recoil';\n\nconst Wrapper = styled.div`\n    margin: 10px;\n    font-size: 15px;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    input {\n        width: 15px;\n        height: 15px;\n        margin-top: 10px;\n    }\n`;\n\nexport const compareState = atom({\n    key: 'CompareButton',\n    default: [],\n});\n\nconst CompareButton = () => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isModalProduct, setIsModalProduct] = useState(false);\n    const [data, setData] = useRecoilState(compareState);\n    const [newData, setNewData] = useState([]);\n\n    useEffect(() => {\n        fetch(API)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res.data.content);\n                setNewData(res.data.new_content);\n            });\n    }, []);\n\n    const handleShowModal = () => {\n        setIsModalOpen(!isModalOpen);\n    };\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    const handleCheck = (e) => {\n        const item = data[0];\n        const { checked } = e.target;\n        if (checked) {\n            addItem(new Date().getMilliseconds(), item);\n        } else {\n            console.log(item);\n            removeItem(item.id);\n        }\n    };\n\n    const addItem = (id, item) => {\n        setData((data) => [...data, { ...item, id }]);\n    };\n\n    const removeItem = (el) => {\n        setData(data.filter((data) => data.id !== el));\n    };\n\n    return (\n        <Fragment>\n            <Container>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n                <input type='checkbox' onChange={handleCheck} />\n                <Wrapper>비교</Wrapper>\n            </Container>\n            <ModalButton\n                handleCheck={handleCheck}\n                handleAddItem={addItem}\n                isModalProduct={isModalProduct}\n                removeItem={removeItem}\n                data={data}\n                isModalOpen={isModalOpen}\n                handleshowModal={handleShowModal}\n                handleModalProduct={handleModalProduct}\n            />\n        </Fragment>\n    );\n};\n\nexport default CompareButton;\n","/Users/julie/Desktop/oasis/Practice/src/pages/props/Baby.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Children.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/config.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalButton.js",["68","69","70"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport BrandBuilding from './components/BrandBuilding';\nimport NothingPage from './components/NothingPage';\nimport { compareState } from '../compare/CompareButton';\nimport { useRecoilState } from 'recoil';\nimport Building from './components/Building';\nimport Brand from './components/Brand';\n\nconst Toggle = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    bottom: 0;\n`;\n\nconst Compare = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n    width: 200px;\n    height: 44px;\n    outline-style: none;\n    margin: 0 0 -1px 208px;\n    border-radius: 8px 8px 0 0;\n    background-color: #212121;\n    color: #ffffff;\n    font-weight: 500;\n    border: 0;\n    outline: 0;\n\n    span {\n        color: ${(props) => (props.isModalProduct ? '#ffffff' : 'ff5b29')};\n        font-size: 14px;\n        text-align: center;\n        font-family: NotoSansKR;\n        line-height: normal;\n        margin-right: 2px;\n    }\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    .fa-angle-up {\n        font-size: 22px;\n        margin-left: 6px;\n    }\n\n    .fa-angle-down {\n        font-size: 22px;\n        margin-left: 6px;\n    }\n`;\n\nconst PlaceNumber = styled.span`\n    color: ${(props) => (!props.data ? 'white' : '#ff5b29')};\n`;\n\nconst Line = styled.div`\n    width: 100%;\n    height: 2px;\n    background-color: #212121;\n`;\n\nconst ModalButton = ({ removeItem, isModalOpen }) => {\n    const [isModalProduct, setIsModalProduct] = useState(false);\n    const [data, setData] = useRecoilState(compareState);\n\n    const handleModalProduct = () => {\n        setIsModalProduct(!isModalProduct);\n    };\n\n    return (\n        <Toggle isModalOpen={isModalOpen}>\n            <Compare onClick={() => handleModalProduct()}>\n                <span>견적 비교하기</span>\n                <PlaceNumber data={data}>({!data ? 0 : data?.length}/5)</PlaceNumber>\n                {isModalProduct ? (\n                    <i className='fa fa-angle-down' aria-hidden='true'></i>\n                ) : (\n                    <i className='fa fa-angle-up' aria-hidden='true'></i>\n                )}\n            </Compare>\n            <Line />\n            {data ? (\n                <BrandBuilding isModalProduct={isModalProduct} removeItem={removeItem} />\n            ) : (\n                // <Building isModalProduct={isModalProduct} removeItem={removeItem} />\n                // <Brand isModalProduct={isModalProduct} removeItem={removeItem} />\n                <NothingPage isModalProduct={isModalProduct} />\n            )}\n        </Toggle>\n    );\n};\n\nexport default ModalButton;\n","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/BrandBuilding.js",["71","72"],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/NothingPage.js",["73","74"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../CompareButton';\n\nconst EmptyContainer = styled.div`\n    display: ${(props) => (props.setContent !== undefined ? 'none' : 'flex')};\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    max-height: 228px;\n`;\n\nconst Empty = styled.div``;\n\nconst Icon = styled.img`\n    height: 100px;\n    width: 100px;\n    margin: 37px 669px 0 671px;\n`;\n\nconst Text = styled.div`\n    font-size: 14px;\n    color: #212121;\n    text-align: center;\n    font-weight: 600;\n    margin: 14px 0;\n    line-height: 1.4;\n`;\n\nconst NothingPage = ({ isModalProduct }) => {\n    const [content, setContent] = useRecoilState(compareState);\n\n    return (\n        <EmptyContainer isModalProduct={isModalProduct}>\n            <Empty>\n                <Icon src='https://i.esdrop.com/d/7IxZWuVOo0.png' alt='empty' />\n                <Text>\n                    비교하고 싶은 견적 내역을 추가해주세요.\n                    <br />\n                    최대 5개까지 비교할 수 있습니다.\n                </Text>\n            </Empty>\n        </EmptyContainer>\n    );\n};\n\nexport default NothingPage;\n","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/Building.js",["75","76"],"import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport { compareState } from '../CompareButton';\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 457px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    font-size: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 127px;\n    color: #929292;\n\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    font-weight: 700;\n\n    .placeimage {\n        position: relative;\n        margin: 2px 2px 0;\n        margin-bottom: 14px;\n\n        img {\n            width: 188px;\n            height: 76px;\n            border-radius: 8px;\n        }\n\n        .background {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background-color: rgba(0, 0, 0, 0.6);\n            width: 20px;\n            height: 20px;\n            border-radius: 100%;\n\n            .fa-times {\n                color: #fff;\n                font-weight: 600;\n                margin-top: 3px;\n            }\n\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        height: 18px;\n    }\n    .container {\n        text-align: right;\n        margin-top: 13.5px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: ${(props) => (props.minNumber ? 'blue' : 'black')};\n        }\n\n        #cost {\n            color: ${(props) => (props.min ? '#005cff' : '#212121')};\n        }\n    }\n`;\n\nconst Building = ({ isModalProduct, removeItem }) => {\n    const [data, setData] = useRecoilState(compareState);\n\n    const cost = data.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n    // console.log(min);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', ' 만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <Fragment>\n            <WrapModal isModalProduct={isModalProduct}>\n                <Categories>\n                    <div className='category'>예상 창업비용</div>\n                    <div className='category'>보증금</div>\n                    <div className='category'>권리금</div>\n                    <div className='category'>면적</div>\n                    <div className='category' id='last'>\n                        층\n                    </div>\n                </Categories>\n                <PlaceData>\n                    {data?.map((data, idx) => {\n                        return (\n                            <Place key={idx} min={min === data.estimatedInitialInvestmentCost}>\n                                <div className='placeimage'>\n                                    <img src={data.src} alt='store'></img>\n                                    <div className='background'>\n                                        <i className='fas fa-times' onClick={() => removeItem(data.id)}></i>\n                                    </div>\n                                </div>\n                                <div className='address'>{data.brokerageStoreAddress}</div>\n                                <div className='container'>\n                                    <div className='info' id='cost'>\n                                        {countNumber(data.estimatedInitialInvestmentCost)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info' id='max'>\n                                        {countNumber(data.deposit)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {countNumber(data.premium)\n                                            .toString()\n                                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    </div>\n                                    <div className='info'>\n                                        {Math.floor(data.exclusiveAreaPy * 0.3025)}평 ({data.exclusiveAreaPy}㎡)\n                                    </div>\n                                    <div className='info'>\n                                        {data.floor}/{data.wholeOfFloor}층\n                                    </div>\n                                </div>\n                            </Place>\n                        );\n                    })}\n                </PlaceData>\n            </WrapModal>\n        </Fragment>\n    );\n};\n\nexport default Building;\n","/Users/julie/Desktop/oasis/Practice/src/pages/compare/components/Brand.js",["77","78"],"import React from 'react';\nimport styled from 'styled-components';\nimport { compareState } from '../CompareButton';\nimport { useRecoilState } from 'recoil';\n\nconst WrapModal = styled.div`\n    display: ${(props) => (props.isModalProduct ? 'flex' : 'none')};\n    justify-content: flex-start;\n    margin: 0 210px;\n    max-height: 228px;\n    overflow: hidden;\n`;\n\nconst Categories = styled.div`\n    display: flex;\n    font-size: 10px;\n    flex-direction: column;\n    justify-content: flex-end;\n    width: 60px;\n    text-align: left;\n    padding-top: 133px;\n    color: #929292;\n    .category {\n        padding: 9px 0;\n        border-bottom: 1px solid #eeeeee;\n    }\n    #last {\n        margin-bottom: 40px;\n    }\n`;\n\nconst PlaceData = styled.div`\n    display: flex;\n`;\n\nconst Place = styled.div`\n    position: relative;\n    justify-content: center;\n    text-align: center;\n    font-size: 14px;\n    height: 20px;\n    width: 192px;\n    font-weight: 700;\n\n    .logoContainer {\n        position: relative;\n\n        .placeLogo {\n            border-radius: 14px;\n            justify-content: center;\n            width: 40px;\n            height: 40px;\n            margin: 20px 0 0;\n        }\n\n        .background {\n            position: absolute;\n            top: 10px;\n            right: 10px;\n            background-color: rgba(0, 0, 0, 0.6);\n            width: 20px;\n            height: 20px;\n            border-radius: 100%;\n\n            .fa-times {\n                color: #fff;\n                font-weight: 600;\n                margin-top: 3px;\n            }\n\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n\n    .placetype {\n        font-size: 12px;\n        font-weight: 500;\n        margin-top: 10px;\n        height: 18px;\n        text-align: center;\n    }\n\n    .brand {\n        height: 20px;\n    }\n\n    .container {\n        text-align: right;\n        margin-top: 14px;\n        font-weight: 500;\n\n        .info {\n            border-bottom: 1px solid #eeeeee;\n            padding: 6.5px 50px 6.5px 30px;\n            font-weight: 600;\n            color: #212121;\n        }\n\n        #cost {\n            color: ${(props) => (props.min ? '#005cff' : '#212121')};\n        }\n\n        #profit {\n            color: ${(props) => (props.max ? '#005cff' : '#212121')};\n        }\n    }\n`;\n\nconst Brand = ({ isModalProduct, removeItem }) => {\n    const [data, setData] = useRecoilState(compareState);\n\n    const cost = data.map((x) => x.estimatedInitialInvestmentCost);\n    const min = Math.min.apply(null, cost);\n\n    const profit = data.map((x) => x.expectationProfit);\n    const max = Math.max.apply(null, profit);\n\n    const countNumber = (number) => {\n        var inputNumber = number < 0 ? false : number;\n        var unitWords = ['', '만원'];\n        var splitUnit = 10000;\n        var splitCount = unitWords.length;\n        var resultArray = [];\n        var resultString = '';\n\n        for (var i = 0; i < splitCount; i++) {\n            var unitResult = (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n            unitResult = Math.floor(unitResult);\n            if (unitResult > 0) {\n                resultArray[i] = unitResult;\n            }\n        }\n\n        for (var i = 0; i < resultArray.length; i++) {\n            if (!resultArray[i]) continue;\n            resultString = String(resultArray[i]) + unitWords[i] + resultString;\n        }\n\n        return resultString;\n    };\n\n    return (\n        <WrapModal isModalProduct={isModalProduct}>\n            <Categories>\n                <div className='category'>예상 창업비용</div>\n                <div className='category' id='last'>\n                    예상 월 수익\n                </div>\n            </Categories>\n            <PlaceData>\n                {data?.map((data, idx) => {\n                    return (\n                        <Place\n                            key={idx}\n                            min={min === data.estimatedInitialInvestmentCost}\n                            max={max === data.expectationProfit}\n                        >\n                            <div className='logoContainer'>\n                                <img className='placeLogo' src={data.logo} alt='logo'></img>\n                                <div className='background'>\n                                    <i className='fas fa-times' onClick={() => removeItem(data.id)}></i>\n                                </div>\n                            </div>\n                            <div className='placetype'>{data.typeBusiness}</div>\n                            <div className='brand'>{data.franchiseBrandName}</div>\n                            <div className='container'>\n                                <div className='info' id='cost'>\n                                    {countNumber(data.estimatedInitialInvestmentCost)\n                                        .toString()\n                                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                </div>\n                                <div className='info' id='profit'>\n                                    {countNumber(data.expectationProfit)\n                                        .toString()\n                                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                </div>\n                            </div>\n                        </Place>\n                    );\n                })}\n            </PlaceData>\n        </WrapModal>\n    );\n};\n\nexport default Brand;\n","/Users/julie/Desktop/oasis/Practice/src/pages/compare/modalButton.js",["79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":30,"column":12,"nodeType":"88","messageId":"89","endLine":30,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":39,"column":8,"nodeType":"92","endLine":39,"endColumn":10,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":16},{"ruleId":"86","severity":1,"message":"95","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":13},{"ruleId":"86","severity":1,"message":"96","line":70,"column":18,"nodeType":"88","messageId":"89","endLine":70,"endColumn":25},{"ruleId":"86","severity":1,"message":"96","line":118,"column":18,"nodeType":"88","messageId":"89","endLine":118,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":142,"column":18,"nodeType":"88","messageId":"99","endLine":142,"endColumn":19},{"ruleId":"86","severity":1,"message":"100","line":30,"column":12,"nodeType":"88","messageId":"89","endLine":30,"endColumn":19},{"ruleId":"86","severity":1,"message":"101","line":30,"column":21,"nodeType":"88","messageId":"89","endLine":30,"endColumn":31},{"ruleId":"86","severity":1,"message":"96","line":101,"column":18,"nodeType":"88","messageId":"89","endLine":101,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":123,"column":18,"nodeType":"88","messageId":"99","endLine":123,"endColumn":19},{"ruleId":"86","severity":1,"message":"96","line":112,"column":18,"nodeType":"88","messageId":"89","endLine":112,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":136,"column":18,"nodeType":"88","messageId":"99","endLine":136,"endColumn":19},{"ruleId":"86","severity":1,"message":"102","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":21},{"ruleId":"86","severity":1,"message":"94","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":16},{"ruleId":"86","severity":1,"message":"96","line":70,"column":18,"nodeType":"88","messageId":"89","endLine":70,"endColumn":25},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'newData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setData'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'Building' is defined but never used.","'Brand' is defined but never used.","'setData' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'BrandBuilding' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [setData]",{"range":"108","text":"109"},[1013,1015],"[setData]"]