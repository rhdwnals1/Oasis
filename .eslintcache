[{"/Users/julie/Desktop/oasis/Practice/src/index.js":"1","/Users/julie/Desktop/oasis/Practice/src/Routes.js":"2","/Users/julie/Desktop/oasis/Practice/src/pages/props/Parent.js":"3","/Users/julie/Desktop/oasis/Practice/src/pages/props/Mother.js":"4","/Users/julie/Desktop/oasis/Practice/src/pages/compare/CompareButton.js":"5","/Users/julie/Desktop/oasis/Practice/src/pages/props/Baby.js":"6","/Users/julie/Desktop/oasis/Practice/src/pages/config.js":"7","/Users/julie/Desktop/oasis/Practice/src/pages/props/Children.js":"8","/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalButton.js":"9","/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalPage.js":"10"},{"size":216,"mtime":1612683922265,"results":"11","hashOfConfig":"12"},{"size":694,"mtime":1612684427487,"results":"13","hashOfConfig":"12"},{"size":1409,"mtime":1612683922266,"results":"14","hashOfConfig":"12"},{"size":2002,"mtime":1612683922266,"results":"15","hashOfConfig":"12"},{"size":1176,"mtime":1612712501578,"results":"16","hashOfConfig":"12"},{"size":557,"mtime":1612683922266,"results":"17","hashOfConfig":"12"},{"size":38,"mtime":1612683922266,"results":"18","hashOfConfig":"12"},{"size":530,"mtime":1612683922266,"results":"19","hashOfConfig":"12"},{"size":2398,"mtime":1612712877765,"results":"20","hashOfConfig":"12"},{"size":7699,"mtime":1612703079639,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1jud00b",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/julie/Desktop/oasis/Practice/src/index.js",[],["44","45"],"/Users/julie/Desktop/oasis/Practice/src/Routes.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Parent.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Mother.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/CompareButton.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Baby.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/config.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/props/Children.js",[],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalButton.js",["46"],"/Users/julie/Desktop/oasis/Practice/src/pages/compare/ModalPage.js",["47","48","49"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { API } from \"../config\";\n\nconst ModalPage = ({ isModalProduct }) => {\n  const [data, setData] = useState([]);\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    fetch(API)\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res.category.data);\n        setContent(res.data.content);\n      });\n  }, []);\n\n  // console.log(\"data:\", data, \"cont:\", content);\n\n  return (\n    <Fragment>\n      <WrapModal isModalProduct={isModalProduct}>\n        <Categories>\n          <div className=\"category\">예상 창업비용</div>\n          <div className=\"category\">예상 월 수익</div>\n          <div className=\"category\">보증금</div>\n          <div className=\"category\">권리금</div>\n          <div className=\"category\">면적</div>\n          <div className=\"category\">층</div>\n        </Categories>\n        <PlaceData>\n          {content?.map((content) => {\n            console.log(content);\n            return (\n              <Place>\n                <div className=\"placeimage\">\n                  <img src={content.src}></img>\n                  <img className=\"placeLogo\" src={content.logo}></img>\n                </div>\n                <div className=\"placetype\">{content.typeBusiness}</div>\n                <div className=\"brand\">{content.franchiseBrandName}</div>\n                <div className=\"address\">{content.brokerageStoreAddress}</div>\n                <div className=\"container\">\n                  <div className=\"info\">{content.brokerageStoreAddress}</div>\n                  <div className=\"info\">{content.brokerageStoreAddress}</div>\n                  <div className=\"info\">{content.brokerageStoreAddress}</div>\n                  <div className=\"info\">{content.brokerageStoreAddress}</div>\n                  <div className=\"info\">{content.brokerageStoreAddress}</div>\n                  <div className=\"info\">{content.brokerageStoreAddress}</div>\n                </div>\n              </Place>\n            );\n          })}\n        </PlaceData>\n      </WrapModal>\n    </Fragment>\n  );\n};\n\nconst WrapModal = styled.div`\n  display: ${(props) => (props.isModalProduct ? \"flex\" : \"none\")};\n  justify-content: flex-start;\n  margin: 0 208px;\n`;\n\nconst Categories = styled.div`\n  font-size: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  width: 60px;\n  /* height: 272px; */\n  /* margin: 8px 8px 8px 0; */\n  text-align: left;\n  padding-top: 186px;\n  color: #929292;\n\n  .category {\n    padding: 9px 0;\n    border-bottom: 1px solid #eeeeee;\n  }\n`;\n\nconst PlaceData = styled.div`\n  display: flex;\n`;\n\nconst Place = styled.div`\n  justify-content: center;\n  text-align: center;\n  font-size: 14px;\n  height: 20px;\n  font-weight: 700;\n\n  .placeimage {\n    position: relative;\n    margin: 2px 2px 0;\n    margin-bottom: 30px;\n\n    img {\n      width: 188px;\n      height: 76px;\n      border-radius: 8px;\n    }\n\n    .placeLogo {\n      border-radius: 14px;\n      position: absolute;\n      top: 55px;\n      left: 75px;\n      width: 40px;\n      height: 40px;\n    }\n  }\n\n  .placetype {\n    font-size: 12px;\n    font-weight: 500;\n    height: 18px;\n  }\n\n  .address {\n    margin-top: 2px;\n  }\n\n  .container {\n    text-align: right;\n    margin-top: 20px;\n    font-weight: 500;\n\n    .info {\n      border-bottom: 1px solid #eeeeee;\n      padding: 6.5px 30px;\n    }\n  }\n`;\n\nexport default ModalPage;\n\n// import React, { Fragment, useState, useEffect } from \"react\";\n// import styled from \"styled-components\";\n// import { API } from \"../config\";\n\n// const ModalPage = ({ isModalProduct }) => {\n//   const [data, setData] = useState([]);\n//   const [content, setContent] = useState([]);\n\n//   useEffect(() => {\n//     fetch(API)\n//       .then((res) => res.json())\n//       .then((res) => setData(res.category.data));\n\n//     fetch(API)\n//       .then((res) => res.json())\n//       .then((res) => setContent(res.data.content));\n//   }, []);\n\n//   // console.log(data);\n\n//   return (\n//     <Fragment>\n//       <WrapModal isModalProduct={isModalProduct}>\n//         <Detail>\n//           <Container>\n//             <Wrapper>\n//               <Store src={content.src} alt=\"store\" />\n//               <Logo src={content.logo} alt=\"logo\" />\n//               <div className=\"type\">{content.typeBusiness}</div>\n//               <div className=\"name\">{content.franchiseBrandName}</div>\n//               <div className=\"place\">{content.brokerageStoreAddress}</div>\n//             </Wrapper>\n//           </Container>\n//           <Container2>\n//             <>\n//               <List>{data.text}</List>\n//             </>\n//             );\n//           </Container2>\n//         </Detail>\n//       </WrapModal>\n//     </Fragment>\n//   );\n// };\n\n// export default ModalPage;\n\n// // const Wrapper = styled.div`\n// //   position: relative;\n// //   display: flex;\n// //   flex-direction: column;\n// //   width: 1440px;\n// //   height: 422px;\n\n// //   .type {\n// //     position: absolute;\n// //     margin: 110px 10px 294px;\n// //     height: 18px;\n// //     width: 172px;\n// //     font-weight: 500;\n// //     font-size: 12px;\n// //     text-align: center;\n// //     color: #212121;\n// //   }\n\n// //   .name {\n// //     position: absolute;\n// //     margin: 128px 10px 274px;\n// //     height: 20px;\n// //     width: 172px;\n// //     font-weight: 700;\n// //     font-size: 14px;\n// //     text-align: center;\n// //     color: #212121;\n// //   }\n\n// //   .place {\n// //     position: absolute;\n// //     margin: 150px 10px 252px;\n// //     height: 20px;\n// //     width: 172px;\n// //     font-weight: 700;\n// //     font-size: 14px;\n// //     text-align: center;\n// //     color: #212121;\n// //   }\n// // `;\n\n// const WrapModal = styled.div`\n//   /* position: fixed; */\n//   /* left:0; */\n//   /* bottom:0; */\n//   /* height: 422px; */\n//   margin: 2px 0 0;\n//   background-color: ivory;\n//   display: ${(props) => (props.isModalProduct ? \"flex\" : \"none\")};\n//   justify-content: center;\n// `;\n\n// const Detail = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   width: 1280px;\n// `;\n\n// const Wrapper = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   margin-right: 20px;\n//   position: relative;\n\n//   .type {\n//     margin-top: 25px;\n//   }\n// `;\n\n// const Container = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   width: 960px;\n//   /* height: 422px; */\n//   padding-left: 150px;\n// `;\n\n// const Container2 = styled.div`\n//   position: relative;\n//   width: 1024px;\n// `;\n\n// const List = styled.div`\n//   font-size: 10px;\n//   text-align: left;\n//   font-weight: 500;\n//   color: #9e9e9e;\n//   margin: 11px 0 6px;\n//   height: 15px;\n//   border-bottom: 1px solid gray;\n// `;\n\n// const Store = styled.img`\n//   width: 188px;\n//   height: 76px;\n// `;\n\n// const Logo = styled.img`\n//   width: 40px;\n//   height: 40px;\n//   position: absolute;\n//   top: 50px;\n// `;\n\n// // const Store = styled.img`\n// //   width: 188px;\n// //   height: 76px;\n// //   border-radius: 8px;\n// //   margin: 2px;\n// // `;\n\n// // const Logo = styled.img`\n// //   position: absolute;\n// //   left: 75px;\n// //   width: 40px;\n// //   height: 40px;\n// //   border-radius: 14px;\n// //   margin: 56px 18px 10px 0;\n// //   border: solid 1px #eeeeee;\n// //   justify-content: center;\n// // `;\n\n// // const Line = styled.div`\n// //   position: absolute;\n// //   width: 1440px;\n// //   height: 1px;\n// //   margin: 216px 88px 32px 0;\n// //   background-color: red;\n// // `;\n\n// const Category = styled.div`\n//   margin: 195px 0 40px;\n//   width: 60px;\n//   height: 422px;\n// `;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":6,"column":18,"nodeType":"56","messageId":"57","endLine":6,"endColumn":27},{"ruleId":"54","severity":1,"message":"58","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":37,"column":19,"nodeType":"61","endLine":37,"endColumn":42},{"ruleId":"59","severity":1,"message":"60","line":38,"column":19,"nodeType":"61","endLine":38,"endColumn":65},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'setToggle' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]